<ControlTemplate TargetType="RibbonTextBox" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Border Name="MainBorder" Margin="1,1,1,1">
    <Grid Margin="1,0,1,0" SnapsToDevicePixels="True">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" Name="OuterTextColumn" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <Image Source="{TemplateBinding RibbonControlService.LargeImageSource}" Name="Image" Width="32" Height="32" Margin="1,1,1,1" HorizontalAlignment="Center" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor" Grid.Column="1" Grid.Row="0" />
      <Grid Name="Grid" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.Row="1">
        <Grid Name="InnerGrid" Margin="1,1,1,1" HorizontalAlignment="Center" VerticalAlignment="Top">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" Name="TextColumn" />
          </Grid.ColumnDefinitions>
          <Grid Name="TwoLineTextPanel" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0">
            <RibbonTwoLineText TextAlignment="Center" LineHeight="13" LineStackingStrategy="BlockLineHeight" Text="{TemplateBinding RibbonControlService.Label}" Name="TwoLineText" Margin="2,0,2,0" />
            <Rectangle Stroke="#FF000000" StrokeThickness="1" StrokeDashArray="1 2" Name="FocusVisual" Margin="1,1,1,1" Visibility="Collapsed" />
          </Grid>
          <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Border" Height="20" Margin="2,0,2,0" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1">
            <ScrollViewer Name="PART_ContentHost" Width="{TemplateBinding RibbonTextBox.TextBoxWidth}" Margin="0,1,0,1" VerticalAlignment="Center" />
          </Border>
        </Grid>
      </Grid>
    </Grid>
  </Border>
  <ControlTemplate.Triggers>
    <DataTrigger Binding="{Binding Path=ControlSizeDefinition.Width.IsStar, RelativeSource={RelativeSource Mode=Self}}" Value="True">
      <Setter Property="ColumnDefinition.Width" TargetName="TextColumn">
        <Setter.Value>
          <GridLength>*</GridLength>
        </Setter.Value>
      </Setter>
      <Setter Property="ColumnDefinition.Width" TargetName="OuterTextColumn">
        <Setter.Value>
          <GridLength>*</GridLength>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Width" TargetName="PART_ContentHost">
        <Setter.Value>
          <s:Double>NaN</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.HorizontalAlignment" TargetName="Border">
        <Setter.Value>
          <x:Static Member="HorizontalAlignment.Stretch" />
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.HorizontalAlignment" TargetName="Grid">
        <Setter.Value>
          <x:Static Member="HorizontalAlignment.Stretch" />
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.HorizontalAlignment" TargetName="InnerGrid">
        <Setter.Value>
          <x:Static Member="HorizontalAlignment.Stretch" />
        </Setter.Value>
      </Setter>
    </DataTrigger>
    <DataTrigger Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}" Value="Large">
      <Setter Property="FrameworkElement.MinWidth">
        <Setter.Value>
          <s:Double>44</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Height">
        <Setter.Value>
          <s:Double>66</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Height" TargetName="Image">
        <Setter.Value>
          <s:Double>32</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Width" TargetName="Image">
        <Setter.Value>
          <s:Double>32</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.MinHeight" TargetName="Grid">
        <Setter.Value>
          <s:Double>26</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="RibbonTwoLineText.HasTwoLines" TargetName="TwoLineText">
        <Setter.Value>
          <s:Boolean>True</s:Boolean>
        </Setter.Value>
      </Setter>
    </DataTrigger>
    <DataTrigger Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}" Value="Small">
      <Setter Property="FrameworkElement.Height">
        <Setter.Value>
          <s:Double>22</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="Image.Source" TargetName="Image">
        <Setter.Value>
          <Binding Path="SmallImageSource" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Height" TargetName="Image">
        <Setter.Value>
          <s:Double>16</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Width" TargetName="Image">
        <Setter.Value>
          <s:Double>16</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.HorizontalAlignment" TargetName="Image">
        <Setter.Value>
          <x:Static Member="HorizontalAlignment.Left" />
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Margin" TargetName="Image">
        <Setter.Value>
          <Thickness>2,0,1,0</Thickness>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Margin" TargetName="TwoLineText">
        <Setter.Value>
          <Thickness>2,0,1,0</Thickness>
        </Setter.Value>
      </Setter>
      <Setter Property="RibbonTwoLineText.HasTwoLines" TargetName="TwoLineText">
        <Setter.Value>
          <s:Boolean>False</s:Boolean>
        </Setter.Value>
      </Setter>
      <Setter Property="Grid.Column" TargetName="Image">
        <Setter.Value>
          <s:Int32>0</s:Int32>
        </Setter.Value>
      </Setter>
      <Setter Property="Grid.Row" TargetName="Image">
        <Setter.Value>
          <s:Int32>1</s:Int32>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Margin" TargetName="InnerGrid">
        <Setter.Value>
          <Thickness>0,0,0,0</Thickness>
        </Setter.Value>
      </Setter>
    </DataTrigger>
    <DataTrigger Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}" Value="Collapsed">
      <Setter Property="UIElement.Visibility" TargetName="Image">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
    </DataTrigger>
    <DataTrigger Binding="{Binding Path=ControlSizeDefinition.IsLabelVisible, RelativeSource={RelativeSource Mode=Self}}" Value="False">
      <Setter Property="UIElement.Visibility" TargetName="TwoLineTextPanel">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
    </DataTrigger>
    <MultiDataTrigger>
      <MultiDataTrigger.Conditions>
        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
      </MultiDataTrigger.Conditions>
      <Setter Property="Panel.Background" TargetName="Border">
        <Setter.Value>
          <Binding Path="MouseOverBackground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="Border">
        <Setter.Value>
          <Binding Path="MouseOverBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
    </MultiDataTrigger>
    <MultiDataTrigger>
      <MultiDataTrigger.Conditions>
        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
        <Condition Binding="{Binding Path=IsKeyboardFocused, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
      </MultiDataTrigger.Conditions>
      <Setter Property="Panel.Background" TargetName="Border">
        <Setter.Value>
          <Binding Path="MouseOverBackground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="Border">
        <Setter.Value>
          <Binding Path="MouseOverBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
    </MultiDataTrigger>
    <Trigger Property="RibbonControlService.ShowKeyboardCues">
      <Setter Property="UIElement.Visibility" TargetName="FocusVisual">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="UIElement.Opacity" TargetName="Image">
        <Setter.Value>
          <s:Double>0.5</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="Border">
        <Setter.Value>
          <SolidColorBrush>#90DEDEDE</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="Border">
        <Setter.Value>
          <SolidColorBrush>#90B1BBC6</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="TextElement.Foreground" TargetName="MainBorder">
        <Setter.Value>
          <SolidColorBrush>#FF9E9E9E</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="RibbonControlService.IsInControlGroup">
      <Setter Property="Border.BorderBrush" TargetName="MainBorder">
        <Setter.Value>
          <Binding Path="Ribbon.BorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderThickness" TargetName="MainBorder">
        <Setter.Value>
          <Thickness>0,0,1,0</Thickness>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
      <Setter Property="Panel.Background">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.WindowBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="Border">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.ControlLightBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="Border">
        <Setter.Value>
          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Shape.Stroke" TargetName="FocusVisual">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.WindowFrameBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="TextElement.Foreground" TargetName="MainBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.MenuTextBrushKey}" />
        </Setter.Value>
      </Setter>
    </DataTrigger>
    <MultiDataTrigger>
      <MultiDataTrigger.Conditions>
        <Condition Binding="{Binding Path=IsInControlGroup, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
      </MultiDataTrigger.Conditions>
      <Setter Property="Border.BorderBrush" TargetName="MainBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.ControlLightLightBrushKey}" />
        </Setter.Value>
      </Setter>
    </MultiDataTrigger>
    <MultiDataTrigger>
      <MultiDataTrigger.Conditions>
        <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
      </MultiDataTrigger.Conditions>
      <Setter Property="TextElement.Foreground" TargetName="MainBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
    </MultiDataTrigger>
  </ControlTemplate.Triggers>
</ControlTemplate>