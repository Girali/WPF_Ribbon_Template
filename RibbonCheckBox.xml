<ControlTemplate TargetType="RibbonCheckBox" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Border Name="MainBorder" Margin="1,1,1,1">
    <StackPanel Orientation="Vertical" Background="#00FFFFFF" Name="StackPanel" Margin="1,1,1,1" SnapsToDevicePixels="True">
      <Image Source="{TemplateBinding RibbonControlService.LargeImageSource}" Name="Image" Width="32" Height="32" Margin="1,1,1,1" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor" />
      <Grid Name="Grid" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="Center">
        <Grid Margin="1,1,1,1" HorizontalAlignment="Center" VerticalAlignment="Top">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0">
            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="#FFFFFFFF" Name="PART_CheckBorder" Width="13" Height="13">
              <Grid>
                <Border BorderThickness="1,1,1,1" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="MiddleBorder" Margin="1,1,1,1" />
                <Border BorderThickness="1,1,1,1" Background="#00FFFFFF" Name="InnerBorder" Margin="1,1,1,1">
                  <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                      <LinearGradientBrush.GradientStops>
                        <GradientStop Color="#80F7F7FF" Offset="0" />
                        <GradientStop Color="#F0F7F7FF" Offset="1" />
                      </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                  </Border.BorderBrush>
                </Border>
                <Path Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="{TemplateBinding TextElement.Foreground}" Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="0.4" Name="CheckMark" FlowDirection="LeftToRight" Opacity="0" />
              </Grid>
            </Border>
          </Grid>
          <Image Source="{TemplateBinding RibbonControlService.SmallImageSource}" Name="SmallImage" Width="16" Height="16" Margin="2,0,1,0" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="Center" Visibility="Collapsed" RenderOptions.BitmapScalingMode="NearestNeighbor" Grid.Column="1" />
          <Grid Name="TwoLineTextPanel" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2">
            <RibbonTwoLineText TextAlignment="Center" LineHeight="13" LineStackingStrategy="BlockLineHeight" Text="{TemplateBinding RibbonControlService.Label}" Name="TwoLineText" Margin="5,0,5,0" />
            <Rectangle Stroke="#FF000000" StrokeThickness="1" StrokeDashArray="1 2" Name="FocusVisual" Margin="1,1,1,1" Visibility="Collapsed" />
          </Grid>
        </Grid>
      </Grid>
    </StackPanel>
  </Border>
  <ControlTemplate.Triggers>
    <DataTrigger Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}" Value="Large">
      <Setter Property="FrameworkElement.MinWidth">
        <Setter.Value>
          <s:Double>44</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Height">
        <Setter.Value>
          <s:Double>66</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.MinHeight" TargetName="Grid">
        <Setter.Value>
          <s:Double>26</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="RibbonTwoLineText.HasTwoLines" TargetName="TwoLineText">
        <Setter.Value>
          <s:Boolean>True</s:Boolean>
        </Setter.Value>
      </Setter>
    </DataTrigger>
    <DataTrigger Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}" Value="Small">
      <Setter Property="FrameworkElement.MinWidth">
        <Setter.Value>
          <s:Double>22</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Height">
        <Setter.Value>
          <s:Double>22</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Visibility" TargetName="Image">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Visibility" TargetName="SmallImage">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Margin" TargetName="TwoLineText">
        <Setter.Value>
          <Thickness>2,0,2,0</Thickness>
        </Setter.Value>
      </Setter>
      <Setter Property="StackPanel.Orientation" TargetName="StackPanel">
        <Setter.Value>
          <x:Static Member="Orientation.Horizontal" />
        </Setter.Value>
      </Setter>
      <Setter Property="RibbonTwoLineText.HasTwoLines" TargetName="TwoLineText">
        <Setter.Value>
          <s:Boolean>False</s:Boolean>
        </Setter.Value>
      </Setter>
    </DataTrigger>
    <MultiDataTrigger>
      <MultiDataTrigger.Conditions>
        <Condition Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}" Value="Small" />
        <Condition Binding="{Binding Path=IsInQuickAccessToolBar, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
      </MultiDataTrigger.Conditions>
      <Setter Property="FrameworkElement.Height">
        <Setter.Value>
          <s:Double>NaN</s:Double>
        </Setter.Value>
      </Setter>
    </MultiDataTrigger>
    <DataTrigger Binding="{Binding Path=ControlSizeDefinition.IsLabelVisible, RelativeSource={RelativeSource Mode=Self}}" Value="False">
      <Setter Property="UIElement.Visibility" TargetName="TwoLineTextPanel">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
    </DataTrigger>
    <DataTrigger Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}" Value="Collapsed">
      <Setter Property="UIElement.Visibility" TargetName="Image">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Visibility" TargetName="SmallImage">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Height">
        <Setter.Value>
          <s:Double>22</s:Double>
        </Setter.Value>
      </Setter>
    </DataTrigger>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="UIElement.Opacity" TargetName="Image">
        <Setter.Value>
          <s:Double>0.5</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Opacity" TargetName="SmallImage">
        <Setter.Value>
          <s:Double>0.5</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Opacity" TargetName="PART_CheckBorder">
        <Setter.Value>
          <s:Double>0.5</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="TextElement.Foreground" TargetName="MainBorder">
        <Setter.Value>
          <SolidColorBrush>#FF9E9E9E</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
      <Setter Property="Border.BorderBrush" TargetName="PART_CheckBorder">
        <Setter.Value>
          <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
            <LinearGradientBrush.GradientStops>
              <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlDarkColorKey}}" Offset="0" />
              <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlDarkColorKey}}" Offset="0.5" />
              <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightLightColorKey}}" Offset="0.5" />
              <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightLightColorKey}}" Offset="1" />
            </LinearGradientBrush.GradientStops>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="PART_CheckBorder">
        <Setter.Value>
          <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
            <LinearGradientBrush.GradientStops>
              <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}" Offset="0" />
              <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}" Offset="0.5" />
              <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}" Offset="0.5" />
              <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}" Offset="1" />
            </LinearGradientBrush.GradientStops>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="MiddleBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="MiddleBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Shape.Fill" TargetName="CheckMark">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.WindowTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Path.Data" TargetName="CheckMark">
        <Setter.Value>
          <StreamGeometry>M10,1.2L4.5,7.3 1.5,5 1.5,7.5 4.5,10 4.5,10 10,4z</StreamGeometry>
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="InnerBorder">
        <Setter.Value>
          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Shape.Stroke" TargetName="FocusVisual">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.WindowFrameBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="TextElement.Foreground" TargetName="MainBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.MenuTextBrushKey}" />
        </Setter.Value>
      </Setter>
    </DataTrigger>
    <MultiDataTrigger>
      <MultiDataTrigger.Conditions>
        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
      </MultiDataTrigger.Conditions>
      <Setter Property="Border.BorderBrush" TargetName="PART_CheckBorder">
        <Setter.Value>
          <Binding Path="MouseOverBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="MiddleBorder">
        <Setter.Value>
          <Binding Path="MouseOverBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="MiddleBorder">
        <Setter.Value>
          <Binding Path="MouseOverBackground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
    </MultiDataTrigger>
    <MultiDataTrigger>
      <MultiDataTrigger.Conditions>
        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
        <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
      </MultiDataTrigger.Conditions>
      <MultiDataTrigger.EnterActions>
        <BeginStoryboard>
          <Storyboard>
            <Storyboard.Children>
              <DoubleAnimation To="1" Duration="00:00:00.2000000" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="Opacity" />
            </Storyboard.Children>
          </Storyboard>
        </BeginStoryboard>
      </MultiDataTrigger.EnterActions>
      <MultiDataTrigger.ExitActions>
        <BeginStoryboard>
          <Storyboard>
            <Storyboard.Children>
              <DoubleAnimation To="0" Duration="00:00:00.4000000" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="Opacity" />
            </Storyboard.Children>
          </Storyboard>
        </BeginStoryboard>
      </MultiDataTrigger.ExitActions>
      <Setter Property="Border.BorderBrush" TargetName="PART_CheckBorder">
        <Setter.Value>
          <Binding Path="CheckedBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="MiddleBorder">
        <Setter.Value>
          <Binding Path="CheckedBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="MiddleBorder">
        <Setter.Value>
          <Binding Path="CheckedBackground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
    </MultiDataTrigger>
    <MultiDataTrigger>
      <MultiDataTrigger.Conditions>
        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
        <Condition Binding="{Binding Path=IsKeyboardFocused, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
      </MultiDataTrigger.Conditions>
      <Setter Property="Border.BorderBrush" TargetName="PART_CheckBorder">
        <Setter.Value>
          <Binding Path="FocusedBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="MiddleBorder">
        <Setter.Value>
          <Binding Path="FocusedBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="MiddleBorder">
        <Setter.Value>
          <Binding Path="FocusedBackground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
    </MultiDataTrigger>
    <Trigger Property="RibbonControlService.ShowKeyboardCues">
      <Setter Property="UIElement.Visibility" TargetName="FocusVisual">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <MultiDataTrigger>
      <MultiDataTrigger.Conditions>
        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
        <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
      </MultiDataTrigger.Conditions>
      <Setter Property="Border.BorderBrush" TargetName="PART_CheckBorder">
        <Setter.Value>
          <Binding Path="PressedBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="MiddleBorder">
        <Setter.Value>
          <Binding Path="PressedBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="MiddleBorder">
        <Setter.Value>
          <Binding Path="PressedBackground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
    </MultiDataTrigger>
    <MultiTrigger>
      <MultiTrigger.Conditions>
        <Condition Property="ToggleButton.IsChecked">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="UIElement.IsMouseOver">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
      </MultiTrigger.Conditions>
      <Setter Property="Panel.Background" TargetName="InnerBorder">
        <Setter.Value>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
              <GradientStop Color="#40FFFEFE" Offset="0" />
              <GradientStop Color="#40FFFEFE" Offset="0.39" />
              <GradientStop Color="#20FFCE68" Offset="0.39" />
              <GradientStop Color="#20FFCE68" Offset="0.69" />
              <GradientStop Color="#10FFFFFF" Offset="1" />
            </LinearGradientBrush.GradientStops>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
    </MultiTrigger>
    <MultiTrigger>
      <MultiTrigger.Conditions>
        <Condition Property="ToggleButton.IsChecked">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="UIElement.IsKeyboardFocused">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
      </MultiTrigger.Conditions>
      <Setter Property="Panel.Background" TargetName="InnerBorder">
        <Setter.Value>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
              <GradientStop Color="#40FFFEFE" Offset="0" />
              <GradientStop Color="#40FFFEFE" Offset="0.39" />
              <GradientStop Color="#20FFCE68" Offset="0.39" />
              <GradientStop Color="#20FFCE68" Offset="0.69" />
              <GradientStop Color="#10FFFFFF" Offset="1" />
            </LinearGradientBrush.GradientStops>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
    </MultiTrigger>
    <MultiTrigger>
      <MultiTrigger.Conditions>
        <Condition Property="ButtonBase.IsPressed">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="UIElement.IsKeyboardFocused">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
      </MultiTrigger.Conditions>
      <Setter Property="Panel.Background" TargetName="InnerBorder">
        <Setter.Value>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
              <GradientStop Color="#40FFFEFE" Offset="0" />
              <GradientStop Color="#40FFFEFE" Offset="0.39" />
              <GradientStop Color="#20FFCE68" Offset="0.39" />
              <GradientStop Color="#20FFCE68" Offset="0.69" />
              <GradientStop Color="#10FFFFFF" Offset="1" />
            </LinearGradientBrush.GradientStops>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
    </MultiTrigger>
    <Trigger Property="RibbonControlService.IsInControlGroup">
      <Setter Property="Border.BorderBrush" TargetName="MainBorder">
        <Setter.Value>
          <Binding Path="Ribbon.BorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderThickness" TargetName="MainBorder">
        <Setter.Value>
          <Thickness>0,0,1,0</Thickness>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <MultiDataTrigger>
      <MultiDataTrigger.Conditions>
        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
        <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
      </MultiDataTrigger.Conditions>
      <Setter Property="UIElement.Opacity" TargetName="CheckMark">
        <Setter.Value>
          <s:Double>1</s:Double>
        </Setter.Value>
      </Setter>
    </MultiDataTrigger>
    <MultiDataTrigger>
      <MultiDataTrigger.Conditions>
        <Condition Binding="{Binding Path=IsInControlGroup, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
      </MultiDataTrigger.Conditions>
      <Setter Property="Border.BorderBrush" TargetName="MainBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.ControlLightLightBrushKey}" />
        </Setter.Value>
      </Setter>
    </MultiDataTrigger>
    <MultiDataTrigger>
      <MultiDataTrigger.Conditions>
        <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
      </MultiDataTrigger.Conditions>
      <Setter Property="TextElement.Foreground" TargetName="MainBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
    </MultiDataTrigger>
  </ControlTemplate.Triggers>
</ControlTemplate>