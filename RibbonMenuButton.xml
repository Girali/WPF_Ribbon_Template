<ControlTemplate TargetType="RibbonMenuButton" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic">
  <Grid Name="MainGrid" SnapsToDevicePixels="True">
    <Grid.ColumnDefinitions>
      <ColumnDefinition />
      <ColumnDefinition Width="Auto" />
    </Grid.ColumnDefinitions>
    <RibbonToggleButton LargeImageSource="{TemplateBinding RibbonControlService.LargeImageSource}" SmallImageSource="{TemplateBinding RibbonControlService.SmallImageSource}" Label="{TemplateBinding RibbonControlService.Label}" CornerRadius="2,2,2,2" ControlSizeDefinition="{TemplateBinding RibbonControlService.ControlSizeDefinition}" MouseOverBorderBrush="{TemplateBinding RibbonControlService.MouseOverBorderBrush}" MouseOverBackground="{TemplateBinding RibbonControlService.MouseOverBackground}" CheckedBackground="{TemplateBinding RibbonControlService.PressedBackground}" CheckedBorderBrush="{TemplateBinding RibbonControlService.PressedBorderBrush}" FocusedBackground="{TemplateBinding RibbonControlService.FocusedBackground}" FocusedBorderBrush="{TemplateBinding RibbonControlService.FocusedBorderBrush}" IsChecked="False" ClickMode="Press" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" Background="{TemplateBinding Panel.Background}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Padding="{TemplateBinding Control.Padding}" Style="{x:Null}" Name="PART_ToggleButton" FocusVisualStyle="{x:Null}" RibbonTwoLineText.PathData="{TemplateBinding RibbonTwoLineText.PathData}">
      <RibbonToggleButton.Template>
        <ControlTemplate TargetType="RibbonToggleButton">
          <Grid Name="MainGrid" SnapsToDevicePixels="True">
            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="{TemplateBinding RibbonControlService.CornerRadius}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="OuterBorder" />
            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="{TemplateBinding RibbonControlService.CornerRadius}" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Name="MiddleBorder">
              <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" CornerRadius="{TemplateBinding RibbonControlService.CornerRadius}" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Name="InnerBorder">
                <StackPanel Name="StackPanel" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                  <Image Source="{TemplateBinding RibbonControlService.LargeImageSource}" Name="PART_Image" Width="32" Height="32" Margin="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=Ribbon, ResourceId=LargeImageMargin}}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                  <Grid Name="Grid" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <RibbonTwoLineText TextAlignment="Center" LineHeight="13" LineStackingStrategy="BlockLineHeight" PathFill="{TemplateBinding TextElement.Foreground}" Text="{TemplateBinding RibbonControlService.Label}" Name="TwoLineText" Margin="1,1,1,0" HorizontalAlignment="Center" VerticalAlignment="Top" RibbonTwoLineText.PathData="{TemplateBinding RibbonTwoLineText.PathData}" RibbonTwoLineText.HasTwoLines="{TemplateBinding RibbonTwoLineText.HasTwoLines}" />
                  </Grid>
                </StackPanel>
              </Border>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}" Value="Large">
              <Setter Property="FrameworkElement.MinWidth">
                <Setter.Value>
                  <s:Double>44</s:Double>
                </Setter.Value>
              </Setter>
              <Setter Property="FrameworkElement.Height">
                <Setter.Value>
                  <s:Double>66</s:Double>
                </Setter.Value>
              </Setter>
              <Setter Property="FrameworkElement.MinHeight" TargetName="Grid">
                <Setter.Value>
                  <s:Double>26</s:Double>
                </Setter.Value>
              </Setter>
              <Setter Property="RibbonTwoLineText.HasTwoLines" TargetName="TwoLineText">
                <Setter.Value>
                  <s:Boolean>True</s:Boolean>
                </Setter.Value>
              </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}" Value="Small">
              <Setter Property="FrameworkElement.Height">
                <Setter.Value>
                  <s:Double>22</s:Double>
                </Setter.Value>
              </Setter>
              <Setter Property="FrameworkElement.Margin" TargetName="PART_Image">
                <Setter.Value>
                  <Thickness>1,0,1,0</Thickness>
                </Setter.Value>
              </Setter>
              <Setter Property="Image.Source" TargetName="PART_Image">
                <Setter.Value>
                  <Binding Path="SmallImageSource" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                </Setter.Value>
              </Setter>
              <Setter Property="FrameworkElement.Width" TargetName="PART_Image">
                <Setter.Value>
                  <s:Double>16</s:Double>
                </Setter.Value>
              </Setter>
              <Setter Property="FrameworkElement.Height" TargetName="PART_Image">
                <Setter.Value>
                  <s:Double>16</s:Double>
                </Setter.Value>
              </Setter>
              <Setter Property="FrameworkElement.HorizontalAlignment" TargetName="TwoLineText">
                <Setter.Value>
                  <x:Static Member="HorizontalAlignment.Left" />
                </Setter.Value>
              </Setter>
              <Setter Property="FrameworkElement.Margin" TargetName="TwoLineText">
                <Setter.Value>
                  <Thickness>1,1,1,1</Thickness>
                </Setter.Value>
              </Setter>
              <Setter Property="StackPanel.Orientation" TargetName="StackPanel">
                <Setter.Value>
                  <x:Static Member="Orientation.Horizontal" />
                </Setter.Value>
              </Setter>
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}" Value="Small" />
                <Condition Binding="{Binding Path=IsInQuickAccessToolBar, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter Property="FrameworkElement.Height">
                <Setter.Value>
                  <s:Double>NaN</s:Double>
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=ControlSizeDefinition.IsLabelVisible, RelativeSource={RelativeSource Mode=Self}}" Value="False">
              <Setter Property="TextBlock.Text" TargetName="TwoLineText">
                <Setter.Value>
                  <x:Null />
                </Setter.Value>
              </Setter>
              <Setter Property="FrameworkElement.Margin" TargetName="TwoLineText">
                <Setter.Value>
                  <Thickness>0,0,0,0</Thickness>
                </Setter.Value>
              </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}" Value="Collapsed">
              <Setter Property="UIElement.Visibility" TargetName="PART_Image">
                <Setter.Value>
                  <x:Static Member="Visibility.Collapsed" />
                </Setter.Value>
              </Setter>
            </DataTrigger>
            <Trigger Property="UIElement.IsMouseOver">
              <Setter Property="Panel.Background" TargetName="OuterBorder">
                <Setter.Value>
                  <Binding Path="MouseOverBackground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                <Setter.Value>
                  <Binding Path="MouseOverBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="InnerBorder">
                <Setter.Value>
                  <SolidColorBrush>#80FFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused">
              <Setter Property="Panel.Background" TargetName="OuterBorder">
                <Setter.Value>
                  <Binding Path="FocusedBackground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                <Setter.Value>
                  <Binding Path="FocusedBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="InnerBorder">
                <Setter.Value>
                  <SolidColorBrush>#80FFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled">
              <Setter Property="UIElement.Opacity" TargetName="PART_Image">
                <Setter.Value>
                  <s:Double>0.5</s:Double>
                </Setter.Value>
              </Setter>
              <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                <Setter.Value>
                  <SolidColorBrush>#FF9E9E9E</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                <Setter.Value>
                  <SolidColorBrush>#FF9E9E9E</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>False</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked">
              <Setter Property="Panel.Background" TargetName="OuterBorder">
                <Setter.Value>
                  <Binding Path="CheckedBackground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                <Setter.Value>
                  <Binding Path="CheckedBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="InnerBorder">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStop Color="#FFE7CBAD" Offset="0" />
                      <GradientStop Color="#FFF7D7B5" Offset="0.1" />
                      <GradientStop Color="#FFFFD38C" Offset="0.36" />
                      <GradientStop Color="#FFFFC75A" Offset="0.36" />
                      <GradientStop Color="#FFFFEFA5" Offset="1" />
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed">
              <Setter Property="Panel.Background" TargetName="OuterBorder">
                <Setter.Value>
                  <Binding Path="PressedBackground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                <Setter.Value>
                  <Binding Path="PressedBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="InnerBorder">
                <Setter.Value>
                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ToggleButton.IsChecked">
                  <Condition.Value>
                    <s:Boolean>True</s:Boolean>
                  </Condition.Value>
                </Condition>
                <Condition Property="UIElement.IsMouseOver">
                  <Condition.Value>
                    <s:Boolean>True</s:Boolean>
                  </Condition.Value>
                </Condition>
              </MultiTrigger.Conditions>
              <Setter Property="Panel.Background" TargetName="MiddleBorder">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStop Color="#40FFFEFE" Offset="0" />
                      <GradientStop Color="#40FFFEFE" Offset="0.39" />
                      <GradientStop Color="#20FFCE68" Offset="0.39" />
                      <GradientStop Color="#20FFCE68" Offset="0.69" />
                      <GradientStop Color="#10FFFFFF" Offset="1" />
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ToggleButton.IsChecked">
                  <Condition.Value>
                    <s:Boolean>True</s:Boolean>
                  </Condition.Value>
                </Condition>
                <Condition Property="UIElement.IsKeyboardFocused">
                  <Condition.Value>
                    <s:Boolean>True</s:Boolean>
                  </Condition.Value>
                </Condition>
              </MultiTrigger.Conditions>
              <Setter Property="Panel.Background" TargetName="MiddleBorder">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStop Color="#40FFFEFE" Offset="0" />
                      <GradientStop Color="#40FFFEFE" Offset="0.39" />
                      <GradientStop Color="#20FFCE68" Offset="0.39" />
                      <GradientStop Color="#20FFCE68" Offset="0.69" />
                      <GradientStop Color="#10FFFFFF" Offset="1" />
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ButtonBase.IsPressed">
                  <Condition.Value>
                    <s:Boolean>True</s:Boolean>
                  </Condition.Value>
                </Condition>
                <Condition Property="UIElement.IsKeyboardFocused">
                  <Condition.Value>
                    <s:Boolean>True</s:Boolean>
                  </Condition.Value>
                </Condition>
              </MultiTrigger.Conditions>
              <Setter Property="Panel.Background" TargetName="MiddleBorder">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStop Color="#40FFFEFE" Offset="0" />
                      <GradientStop Color="#40FFFEFE" Offset="0.39" />
                      <GradientStop Color="#20FFCE68" Offset="0.39" />
                      <GradientStop Color="#20FFCE68" Offset="0.69" />
                      <GradientStop Color="#10FFFFFF" Offset="1" />
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </MultiTrigger>
            <Trigger Property="RibbonControlService.IsInControlGroup">
              <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                <Setter.Value>
                  <Binding Path="Ribbon.BorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderThickness" TargetName="OuterBorder">
                <Setter.Value>
                  <Thickness>0,0,1,0</Thickness>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.CornerRadius" TargetName="OuterBorder">
                <Setter.Value>
                  <CornerRadius>0,0,0,0</CornerRadius>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.CornerRadius" TargetName="InnerBorder">
                <Setter.Value>
                  <CornerRadius>0,0,0,0</CornerRadius>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
              <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.MenuTextBrushKey}" />
                </Setter.Value>
              </Setter>
              <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.MenuTextBrushKey}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Border.CornerRadius" TargetName="OuterBorder">
                <Setter.Value>
                  <CornerRadius>0,0,0,0</CornerRadius>
                </Setter.Value>
              </Setter>
              <Setter Property="Panel.Background" TargetName="OuterBorder">
                <Setter.Value>
                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                <Setter.Value>
                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Panel.Background" TargetName="OuterBorder">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="InnerBorder">
                <Setter.Value>
                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Panel.Background" TargetName="MiddleBorder">
                <Setter.Value>
                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                </Setter.Value>
              </Setter>
              <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True" />
                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.ControlLightBrushKey}" />
                </Setter.Value>
              </Setter>
              <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                </Setter.Value>
              </Setter>
              <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True" />
                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True" />
                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}, FallbackValue=false}" Value="True" />
                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="False" />
                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                <Setter.Value>
                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Panel.Background" TargetName="OuterBorder">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                </Setter.Value>
              </Setter>
              <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                </Setter.Value>
              </Setter>
              <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Panel.Background" TargetName="OuterBorder">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.ControlLightBrushKey}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="InnerBorder">
                <Setter.Value>
                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                </Setter.Value>
              </Setter>
              <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsKeyboardFocused, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Panel.Background" TargetName="OuterBorder">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.ControlLightBrushKey}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="InnerBorder">
                <Setter.Value>
                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                </Setter.Value>
              </Setter>
              <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsKeyboardFocused, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Panel.Background" TargetName="OuterBorder">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.ControlDarkBrushKey}" />
                </Setter.Value>
              </Setter>
              <Setter Property="Panel.Background" TargetName="MiddleBorder">
                <Setter.Value>
                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                </Setter.Value>
              </Setter>
              <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsInControlGroup, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.ControlLightLightBrushKey}" />
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                </Setter.Value>
              </Setter>
              <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </RibbonToggleButton.Template>
      <RibbonToggleButton.Resources>
        <Thickness x:Key="{ComponentResourceKey TypeInTargetAssembly=Ribbon, ResourceId=LargeImageMargin}">1,1,1,2</Thickness>
      </RibbonToggleButton.Resources>
    </RibbonToggleButton>
    <Popup IsOpen="False" Placement="Bottom" HorizontalOffset="1" VerticalOffset="-1" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" AllowsTransparency="True" Name="PART_Popup" Focusable="False">
      <mwt:SystemDropShadowChrome Color="#00FFFFFF" Name="Shadow" RenderOptions.ClearTypeHint="Enabled" KeyTipService.IsKeyTipScope="True">
        <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="2,2,2,2" BorderBrush="{x:Null}" Background="{x:Null}" Name="MenuBorder">
          <Border BorderThickness="0,0,0,0" CornerRadius="2,2,2,2" Background="#F0FFFFFF" Name="SubMenuInnerBorder">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <ScrollViewer Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=FrameworkElement, ResourceId=MenuScrollViewer}}" Name="PART_SubMenuScrollViewer" Margin="1,1,1,1" Grid.Row="1">
                <Grid RenderOptions.ClearTypeHint="Enabled">
                  <Canvas Name="BackgroundCanvas" Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Rectangle RadiusX="2" RadiusY="2" Fill="{x:Null}" Name="OpaqueRect" Width="Auto" Height="Auto" />
                    <Rectangle RadiusX="2" RadiusY="2" Fill="{x:Null}" Name="OverlayRect" Width="Auto" Height="Auto" />
                  </Canvas>
                  <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />
                </Grid>
              </ScrollViewer>
              <Border BorderThickness="0,1,0,0" BorderBrush="{x:Null}" Background="#FFE5EFF9" Name="ResizeControl" Visibility="Collapsed" Grid.Row="2">
                <Thumb Name="PART_ResizeThumb">
                  <Thumb.Style>
                    <Style TargetType="Thumb">
                      <Style.Triggers>
                        <Trigger Property="FrameworkElement.FlowDirection">
                          <Setter Property="FrameworkElement.Cursor">
                            <Setter.Value>
                              <Cursor>SizeNESW</Cursor>
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <x:Static Member="FlowDirection.RightToLeft" />
                          </Trigger.Value>
                        </Trigger>
                      </Style.Triggers>
                      <Style.Resources>
                        <ResourceDictionary />
                      </Style.Resources>
                      <Setter Property="FrameworkElement.Width">
                        <Setter.Value>
                          <s:Double>11</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.Height">
                        <Setter.Value>
                          <s:Double>11</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.VerticalAlignment">
                        <Setter.Value>
                          <x:Static Member="VerticalAlignment.Bottom" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.HorizontalAlignment">
                        <Setter.Value>
                          <x:Static Member="HorizontalAlignment.Right" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.Cursor">
                        <Setter.Value>
                          <Cursor>SizeNWSE</Cursor>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="Thumb">
                            <Border Background="#00FFFFFF">
                              <Path Data="M9,0L11,0 11,11 0,11 0,9 3,9 3,6 6,6 6,3 9,3z" Margin="0,0,2,2">
                                <Path.Fill>
                                  <DrawingBrush ViewportUnits="Absolute" ViewboxUnits="Absolute" Viewport="0,0,3,3" Viewbox="0,0,3,3" TileMode="Tile">
                                    <DrawingBrush.Drawing>
                                      <DrawingGroup>
                                        <DrawingGroup.Children>
                                          <GeometryDrawing Brush="#FF6C747D" Geometry="M0,0L2,0 2,2 0,2z" />
                                        </DrawingGroup.Children>
                                      </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                  </DrawingBrush>
                                </Path.Fill>
                              </Path>
                            </Border>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </Thumb.Style>
                </Thumb>
              </Border>
            </Grid>
          </Border>
        </Border>
      </mwt:SystemDropShadowChrome>
    </Popup>
  </Grid>
  <ControlTemplate.Triggers>
    <Trigger Property="ScrollViewer.CanContentScroll" SourceName="PART_SubMenuScrollViewer">
      <Setter Property="Canvas.Top" TargetName="OpaqueRect">
        <Setter.Value>
          <Binding Path="VerticalOffset" ElementName="PART_SubMenuScrollViewer" />
        </Setter.Value>
      </Setter>
      <Setter Property="Canvas.Left" TargetName="OpaqueRect">
        <Setter.Value>
          <Binding Path="HorizontalOffset" ElementName="PART_SubMenuScrollViewer" />
        </Setter.Value>
      </Setter>
      <Setter Property="Canvas.Top" TargetName="OverlayRect">
        <Setter.Value>
          <Binding Path="VerticalOffset" ElementName="PART_SubMenuScrollViewer" />
        </Setter.Value>
      </Setter>
      <Setter Property="Canvas.Left" TargetName="OverlayRect">
        <Setter.Value>
          <Binding Path="HorizontalOffset" ElementName="PART_SubMenuScrollViewer" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <DataTrigger Binding="{Binding Path=IsInQuickAccessToolBar, RelativeSource={RelativeSource Mode=Self}}" Value="True">
      <Setter Property="FrameworkElement.Height" TargetName="PART_ToggleButton">
        <Setter.Value>
          <s:Double>NaN</s:Double>
        </Setter.Value>
      </Setter>
    </DataTrigger>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="TextElement.Foreground" TargetName="MainGrid">
        <Setter.Value>
          <SolidColorBrush>#FF9E9E9E</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="RibbonMenuButton.HasGallery">
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" TargetName="PART_SubMenuScrollViewer">
        <Setter.Value>
          <x:Static Member="ScrollBarVisibility.Disabled" />
        </Setter.Value>
      </Setter>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" TargetName="PART_SubMenuScrollViewer">
        <Setter.Value>
          <x:Static Member="ScrollBarVisibility.Disabled" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <MultiTrigger>
      <MultiTrigger.Conditions>
        <Condition Property="RibbonMenuButton.CanUserResizeHorizontally">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="RibbonMenuButton.CanUserResizeVertically">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
      </MultiTrigger.Conditions>
      <Setter Property="UIElement.Visibility" TargetName="ResizeControl">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
    </MultiTrigger>
    <MultiTrigger>
      <MultiTrigger.Conditions>
        <Condition Property="RibbonMenuButton.CanUserResizeHorizontally">
          <Condition.Value>
            <s:Boolean>False</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="RibbonMenuButton.CanUserResizeVertically">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
      </MultiTrigger.Conditions>
      <Setter Property="UIElement.Visibility" TargetName="ResizeControl">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Style" TargetName="PART_ResizeThumb">
        <Setter.Value>
          <Style TargetType="Thumb">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="FrameworkElement.Height">
              <Setter.Value>
                <s:Double>11</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.Cursor">
              <Setter.Value>
                <Cursor>SizeNS</Cursor>
              </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                  <Border Background="#00FFFFFF">
                    <Path Margin="0,0,2,2" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                      <Path.Data>
                        <RectangleGeometry Rect="0,0,11,3" />
                      </Path.Data>
                      <Path.Fill>
                        <DrawingBrush ViewportUnits="Absolute" ViewboxUnits="Absolute" Viewport="0,0,3,3" Viewbox="0,0,3,3" TileMode="Tile">
                          <DrawingBrush.Drawing>
                            <DrawingGroup>
                              <DrawingGroup.Children>
                                <GeometryDrawing Brush="#FF6C747D" Geometry="M0,0L2,0 2,2 0,2z" />
                              </DrawingGroup.Children>
                            </DrawingGroup>
                          </DrawingBrush.Drawing>
                        </DrawingBrush>
                      </Path.Fill>
                    </Path>
                  </Border>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Setter.Value>
      </Setter>
    </MultiTrigger>
    <Trigger Property="RibbonMenuButton.IsDropDownPositionedAbove">
      <Setter Property="Grid.Row" TargetName="ResizeControl">
        <Setter.Value>
          <s:Int32>0</s:Int32>
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderThickness" TargetName="ResizeControl">
        <Setter.Value>
          <Thickness>0,0,0,1</Thickness>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <MultiTrigger>
      <MultiTrigger.Conditions>
        <Condition Property="RibbonMenuButton.IsDropDownPositionedAbove">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="RibbonMenuButton.CanUserResizeHorizontally">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="RibbonMenuButton.CanUserResizeVertically">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
      </MultiTrigger.Conditions>
      <Setter Property="FrameworkElement.Style" TargetName="PART_ResizeThumb">
        <Setter.Value>
          <Style TargetType="Thumb">
            <Style.Triggers>
              <Trigger Property="FrameworkElement.FlowDirection">
                <Setter Property="FrameworkElement.Cursor">
                  <Setter.Value>
                    <Cursor>SizeNWSE</Cursor>
                  </Setter.Value>
                </Setter>
                <Trigger.Value>
                  <x:Static Member="FlowDirection.RightToLeft" />
                </Trigger.Value>
              </Trigger>
            </Style.Triggers>
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="FrameworkElement.Width">
              <Setter.Value>
                <s:Double>11</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.Height">
              <Setter.Value>
                <s:Double>11</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.VerticalAlignment">
              <Setter.Value>
                <x:Static Member="VerticalAlignment.Top" />
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.HorizontalAlignment">
              <Setter.Value>
                <x:Static Member="HorizontalAlignment.Right" />
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.Cursor">
              <Setter.Value>
                <Cursor>SizeNESW</Cursor>
              </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                  <Border Background="#00FFFFFF">
                    <Path Data="M0,0L0,3 3,3 3,6 6,6 6,9 9,9 9,11 11,11 11,0z" Margin="0,2,2,0">
                      <Path.Fill>
                        <DrawingBrush ViewportUnits="Absolute" ViewboxUnits="Absolute" Viewport="0,0,3,3" Viewbox="0,0,3,3" TileMode="Tile">
                          <DrawingBrush.Drawing>
                            <DrawingGroup>
                              <DrawingGroup.Children>
                                <GeometryDrawing Brush="#FF6C747D" Geometry="M0,0L2,0 2,2 0,2z" />
                              </DrawingGroup.Children>
                            </DrawingGroup>
                          </DrawingBrush.Drawing>
                        </DrawingBrush>
                      </Path.Fill>
                    </Path>
                  </Border>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Setter.Value>
      </Setter>
    </MultiTrigger>
    <Trigger Property="ItemsControl.HasItems">
      <Setter Property="RibbonTwoLineText.PathData" TargetName="PART_ToggleButton">
        <Setter.Value>
          <x:Null />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="Popup.HasDropShadow" SourceName="PART_Popup">
      <Setter Property="FrameworkElement.Margin" TargetName="Shadow">
        <Setter.Value>
          <Thickness>0,0,5,5</Thickness>
        </Setter.Value>
      </Setter>
      <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="Shadow">
        <Setter.Value>
          <Color>#71000000</Color>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="Popup.IsOpen" SourceName="PART_Popup">
      <Setter Property="Popup.PopupAnimation" TargetName="PART_Popup">
        <Setter.Value>
          <x:Static Member="PopupAnimation.None" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
      <Setter Property="UIElement.Visibility" TargetName="BackgroundCanvas">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
      <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="Shadow">
        <Setter.Value>
          <Color>#00FFFFFF</Color>
        </Setter.Value>
      </Setter>
      <Setter Property="Popup.PopupAnimation" TargetName="PART_Popup">
        <Setter.Value>
          <x:Static Member="PopupAnimation.None" />
        </Setter.Value>
      </Setter>
      <Setter Property="TextElement.Foreground" TargetName="PART_SubMenuScrollViewer">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="MenuBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="MenuBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.MenuBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.CornerRadius" TargetName="MenuBorder">
        <Setter.Value>
          <CornerRadius>0,0,0,0</CornerRadius>
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="ResizeControl">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="ResizeControl">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.MenuBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="SubMenuInnerBorder">
        <Setter.Value>
          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Border.CornerRadius" TargetName="SubMenuInnerBorder">
        <Setter.Value>
          <CornerRadius>0,0,0,0</CornerRadius>
        </Setter.Value>
      </Setter>
      <Setter Property="TextElement.Foreground" TargetName="MainGrid">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
        </Setter.Value>
      </Setter>
    </DataTrigger>
    <MultiDataTrigger>
      <MultiDataTrigger.Conditions>
        <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
      </MultiDataTrigger.Conditions>
      <Setter Property="TextElement.Foreground" TargetName="MainGrid">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
    </MultiDataTrigger>
  </ControlTemplate.Triggers>
</ControlTemplate>