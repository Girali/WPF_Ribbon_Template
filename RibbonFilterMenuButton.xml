<ControlTemplate TargetType="RibbonFilterMenuButton" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ControlTemplate.Resources>
    <ControlTemplate TargetType="RibbonToggleButton" x:Key="ē">
      <Grid SnapsToDevicePixels="True">
        <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="2,2,0,0" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="OuterBorder">
          <Grid Margin="{TemplateBinding Control.Padding}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <RibbonMenuItem Name="PART_CurrentFilterItem" IsHitTestVisible="False" Focusable="False">
              <RibbonMenuItem.Template>
                <ControlTemplate TargetType="RibbonMenuItem">
                  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}">
                    <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" />
                  </Border>
                </ControlTemplate>
              </RibbonMenuItem.Template>
            </RibbonMenuItem>
            <RibbonTwoLineText LineHeight="13" LineStackingStrategy="BlockLineHeight" PathFill="{TemplateBinding TextElement.Foreground}" PathStroke="{TemplateBinding TextElement.Foreground}" Name="TwoLineText" Margin="1,1,1,1" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="1" RibbonTwoLineText.PathData="{TemplateBinding RibbonTwoLineText.PathData}" />
          </Grid>
        </Border>
      </Grid>
    </ControlTemplate>
  </ControlTemplate.Resources>
  <Grid SnapsToDevicePixels="True">
    <Grid.ColumnDefinitions>
      <ColumnDefinition />
      <ColumnDefinition Width="Auto" />
    </Grid.ColumnDefinitions>
    <RibbonToggleButton LargeImageSource="{TemplateBinding RibbonControlService.LargeImageSource}" SmallImageSource="{TemplateBinding RibbonControlService.SmallImageSource}" Label="{TemplateBinding RibbonControlService.Label}" MouseOverBorderBrush="{TemplateBinding RibbonControlService.MouseOverBorderBrush}" MouseOverBackground="{TemplateBinding RibbonControlService.MouseOverBackground}" CheckedBackground="{TemplateBinding RibbonControlService.PressedBackground}" CheckedBorderBrush="{TemplateBinding RibbonControlService.PressedBorderBrush}" FocusedBackground="{TemplateBinding RibbonControlService.FocusedBackground}" FocusedBorderBrush="{TemplateBinding RibbonControlService.FocusedBorderBrush}" IsChecked="False" ClickMode="Press" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="1,1,1,1" Background="{TemplateBinding Panel.Background}" Foreground="{TemplateBinding TextElement.Foreground}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Padding="{TemplateBinding Control.Padding}" Style="{x:Null}" Name="PART_ToggleButton" RibbonTwoLineText.PathData="M0,0L2.5,3 5,0z">
      <RibbonToggleButton.Template>
        <ControlTemplate TargetType="RibbonToggleButton">
          <Grid SnapsToDevicePixels="True">
            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="2,2,0,0" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="OuterBorder">
              <Grid Margin="{TemplateBinding Control.Padding}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <RibbonMenuItem Name="PART_CurrentFilterItem" IsHitTestVisible="False" Focusable="False">
                  <RibbonMenuItem.Template>
                    <ControlTemplate TargetType="RibbonMenuItem">
                      <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}">
                        <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" />
                      </Border>
                    </ControlTemplate>
                  </RibbonMenuItem.Template>
                </RibbonMenuItem>
                <RibbonTwoLineText LineHeight="13" LineStackingStrategy="BlockLineHeight" PathFill="{TemplateBinding TextElement.Foreground}" PathStroke="{TemplateBinding TextElement.Foreground}" Name="TwoLineText" Margin="1,1,1,1" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="1" RibbonTwoLineText.PathData="{TemplateBinding RibbonTwoLineText.PathData}" />
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </RibbonToggleButton.Template>
    </RibbonToggleButton>
    <Popup IsOpen="False" Placement="Bottom" HorizontalOffset="1" VerticalOffset="-1" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" AllowsTransparency="True" Name="PART_Popup" Focusable="False" TextElement.Foreground="#FF000000">
      <mwt:SystemDropShadowChrome Color="#00FFFFFF" Name="Shadow" RenderOptions.ClearTypeHint="Enabled" KeyTipService.IsKeyTipScope="True">
        <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="2,2,2,2" BorderBrush="{x:Null}" Background="{x:Null}" Name="MenuBorder">
          <Border BorderThickness="0,0,0,0" CornerRadius="2,2,2,2" Background="#F0FFFFFF" Name="SubMenuInnerBorder">
            <ScrollViewer Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=FrameworkElement, ResourceId=MenuScrollViewer}}" Name="PART_SubMenuScrollViewer" Margin="1,1,1,1">
              <Grid RenderOptions.ClearTypeHint="Enabled">
                <Canvas Name="BackgroundCanvas" Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                  <Rectangle RadiusX="2" RadiusY="2" Fill="{x:Null}" Name="OpaqueRect" Width="Auto" Height="Auto" />
                  <Rectangle RadiusX="2" RadiusY="2" Fill="{x:Null}" Name="OverlayRect" Width="Auto" Height="Auto" />
                </Canvas>
                <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />
              </Grid>
            </ScrollViewer>
          </Border>
        </Border>
      </mwt:SystemDropShadowChrome>
    </Popup>
  </Grid>
  <ControlTemplate.Triggers>
    <Trigger Property="ScrollViewer.CanContentScroll" SourceName="PART_SubMenuScrollViewer">
      <Setter Property="Canvas.Top" TargetName="OpaqueRect">
        <Setter.Value>
          <Binding Path="VerticalOffset" ElementName="PART_SubMenuScrollViewer" />
        </Setter.Value>
      </Setter>
      <Setter Property="Canvas.Left" TargetName="OpaqueRect">
        <Setter.Value>
          <Binding Path="HorizontalOffset" ElementName="PART_SubMenuScrollViewer" />
        </Setter.Value>
      </Setter>
      <Setter Property="Canvas.Top" TargetName="OverlayRect">
        <Setter.Value>
          <Binding Path="VerticalOffset" ElementName="PART_SubMenuScrollViewer" />
        </Setter.Value>
      </Setter>
      <Setter Property="Canvas.Left" TargetName="OverlayRect">
        <Setter.Value>
          <Binding Path="HorizontalOffset" ElementName="PART_SubMenuScrollViewer" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="Popup.HasDropShadow" SourceName="PART_Popup">
      <Setter Property="FrameworkElement.Margin" TargetName="Shadow">
        <Setter.Value>
          <Thickness>0,0,5,5</Thickness>
        </Setter.Value>
      </Setter>
      <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="Shadow">
        <Setter.Value>
          <Color>#71000000</Color>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="Popup.IsOpen" SourceName="PART_Popup">
      <Setter Property="Popup.PopupAnimation" TargetName="PART_Popup">
        <Setter.Value>
          <x:Static Member="PopupAnimation.None" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
      <Setter Property="UIElement.Visibility" TargetName="BackgroundCanvas">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
      <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="Shadow">
        <Setter.Value>
          <Color>#00FFFFFF</Color>
        </Setter.Value>
      </Setter>
      <Setter Property="TextElement.Foreground" TargetName="PART_SubMenuScrollViewer">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Popup.PopupAnimation" TargetName="PART_Popup">
        <Setter.Value>
          <x:Static Member="PopupAnimation.None" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="MenuBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="MenuBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.MenuBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="SubMenuInnerBorder">
        <Setter.Value>
          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
    </DataTrigger>
  </ControlTemplate.Triggers>
</ControlTemplate>