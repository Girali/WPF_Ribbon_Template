<ControlTemplate TargetType="RibbonQuickAccessToolBar" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" xmlns:swcrp="clr-namespace:System.Windows.Controls.Ribbon.Primitives;assembly=System.Windows.Controls.Ribbon">
  <Grid Margin="{TemplateBinding FrameworkElement.Margin}" SnapsToDevicePixels="True">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*" />
      <ColumnDefinition Width="1" />
      <ColumnDefinition Width="Auto" />
    </Grid.ColumnDefinitions>
    <Grid.Effect>
      <DropShadowEffect ShadowDepth="0" Color="#FFFFFFFF" BlurRadius="15" />
    </Grid.Effect>
    <swcrp:RibbonQuickAccessToolBarPanel IsItemsHost="True" Name="PART_MainPanel" Grid.Column="0" />
    <ContentPresenter Content="{x:Null}" Name="MainCustomizeMenuHost" Grid.Column="2" />
    <Grid Name="OverflowButtonHost" Visibility="Collapsed" Grid.Column="2">
      <RibbonToggleButton KeyTip="00" IsChecked="False" ClickMode="Press" Name="PART_OverflowButton" Width="12">
        <RibbonToggleButton.ControlSizeDefinition>
          <RibbonControlSizeDefinition ImageSize="Collapsed" IsLabelVisible="True" />
        </RibbonToggleButton.ControlSizeDefinition>
        <RibbonToggleButton.Style>
          <Style TargetType="RibbonToggleButton">
            <Style.Resources>
              <Thickness x:Key="{ComponentResourceKey TypeInTargetAssembly=Ribbon, ResourceId=LargeImageMargin}">1,1,1,2</Thickness>
            </Style.Resources>
            <Setter Property="Panel.Background">
              <Setter.Value>
                <SolidColorBrush>#00FFFFFF</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="Border.BorderBrush">
              <Setter.Value>
                <SolidColorBrush>#00FFFFFF</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="Border.BorderThickness">
              <Setter.Value>
                <Thickness>1,1,1,1</Thickness>
              </Setter.Value>
            </Setter>
            <Setter Property="RibbonControlService.CornerRadius">
              <Setter.Value>
                <CornerRadius>2,2,2,2</CornerRadius>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.FocusVisualStyle">
              <Setter.Value>
                <x:Null />
              </Setter.Value>
            </Setter>
            <Setter Property="Control.HorizontalContentAlignment">
              <Setter.Value>
                <x:Static Member="HorizontalAlignment.Center" />
              </Setter.Value>
            </Setter>
            <Setter Property="Control.VerticalContentAlignment">
              <Setter.Value>
                <x:Static Member="VerticalAlignment.Center" />
              </Setter.Value>
            </Setter>
            <Setter Property="RibbonControlService.MouseOverBorderBrush">
              <Setter.Value>
                <Binding Path="Ribbon.MouseOverBorderBrush" RelativeSource="{RelativeSource Mode=Self}" />
              </Setter.Value>
            </Setter>
            <Setter Property="RibbonControlService.MouseOverBackground">
              <Setter.Value>
                <Binding Path="Ribbon.MouseOverBackground" RelativeSource="{RelativeSource Mode=Self}" />
              </Setter.Value>
            </Setter>
            <Setter Property="RibbonControlService.PressedBorderBrush">
              <Setter.Value>
                <Binding Path="Ribbon.PressedBorderBrush" RelativeSource="{RelativeSource Mode=Self}" />
              </Setter.Value>
            </Setter>
            <Setter Property="RibbonControlService.PressedBackground">
              <Setter.Value>
                <Binding Path="Ribbon.PressedBackground" RelativeSource="{RelativeSource Mode=Self}" />
              </Setter.Value>
            </Setter>
            <Setter Property="RibbonControlService.CheckedBorderBrush">
              <Setter.Value>
                <Binding Path="Ribbon.CheckedBorderBrush" RelativeSource="{RelativeSource Mode=Self}" />
              </Setter.Value>
            </Setter>
            <Setter Property="RibbonControlService.CheckedBackground">
              <Setter.Value>
                <Binding Path="Ribbon.CheckedBackground" RelativeSource="{RelativeSource Mode=Self}" />
              </Setter.Value>
            </Setter>
            <Setter Property="RibbonControlService.FocusedBorderBrush">
              <Setter.Value>
                <Binding Path="Ribbon.FocusedBorderBrush" RelativeSource="{RelativeSource Mode=Self}" />
              </Setter.Value>
            </Setter>
            <Setter Property="RibbonControlService.FocusedBackground">
              <Setter.Value>
                <Binding Path="Ribbon.FocusedBackground" RelativeSource="{RelativeSource Mode=Self}" />
              </Setter.Value>
            </Setter>
            <Setter Property="ToolTipService.InitialShowDelay">
              <Setter.Value>
                <s:Int32>900</s:Int32>
              </Setter.Value>
            </Setter>
            <Setter Property="ToolTipService.ShowDuration">
              <Setter.Value>
                <s:Int32>20000</s:Int32>
              </Setter.Value>
            </Setter>
            <Setter Property="ToolTipService.BetweenShowDelay">
              <Setter.Value>
                <s:Int32>0</s:Int32>
              </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="RibbonToggleButton">
                  <Grid Name="MainGrid" SnapsToDevicePixels="True">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="{TemplateBinding RibbonControlService.CornerRadius}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="OuterBorder" />
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="{TemplateBinding RibbonControlService.CornerRadius}" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Name="MiddleBorder">
                      <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" CornerRadius="{TemplateBinding RibbonControlService.CornerRadius}" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Name="InnerBorder">
                        <StackPanel Name="StackPanel" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                          <Image Source="{TemplateBinding RibbonControlService.LargeImageSource}" Name="PART_Image" Width="32" Height="32" Margin="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=Ribbon, ResourceId=LargeImageMargin}}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                          <Grid Name="Grid" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <RibbonTwoLineText TextAlignment="Center" LineHeight="13" LineStackingStrategy="BlockLineHeight" PathFill="{TemplateBinding TextElement.Foreground}" Text="{TemplateBinding RibbonControlService.Label}" Name="TwoLineText" Margin="1,1,1,0" HorizontalAlignment="Center" VerticalAlignment="Top" RibbonTwoLineText.PathData="{TemplateBinding RibbonTwoLineText.PathData}" RibbonTwoLineText.HasTwoLines="{TemplateBinding RibbonTwoLineText.HasTwoLines}" />
                          </Grid>
                        </StackPanel>
                      </Border>
                    </Border>
                  </Grid>
                  <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}" Value="Large">
                      <Setter Property="FrameworkElement.MinWidth">
                        <Setter.Value>
                          <s:Double>44</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.Height">
                        <Setter.Value>
                          <s:Double>66</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.MinHeight" TargetName="Grid">
                        <Setter.Value>
                          <s:Double>26</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="RibbonTwoLineText.HasTwoLines" TargetName="TwoLineText">
                        <Setter.Value>
                          <s:Boolean>True</s:Boolean>
                        </Setter.Value>
                      </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}" Value="Small">
                      <Setter Property="FrameworkElement.Height">
                        <Setter.Value>
                          <s:Double>22</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.Margin" TargetName="PART_Image">
                        <Setter.Value>
                          <Thickness>1,0,1,0</Thickness>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Image.Source" TargetName="PART_Image">
                        <Setter.Value>
                          <Binding Path="SmallImageSource" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.Width" TargetName="PART_Image">
                        <Setter.Value>
                          <s:Double>16</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.Height" TargetName="PART_Image">
                        <Setter.Value>
                          <s:Double>16</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.HorizontalAlignment" TargetName="TwoLineText">
                        <Setter.Value>
                          <x:Static Member="HorizontalAlignment.Left" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.Margin" TargetName="TwoLineText">
                        <Setter.Value>
                          <Thickness>1,1,1,1</Thickness>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="StackPanel.Orientation" TargetName="StackPanel">
                        <Setter.Value>
                          <x:Static Member="Orientation.Horizontal" />
                        </Setter.Value>
                      </Setter>
                    </DataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}" Value="Small" />
                        <Condition Binding="{Binding Path=IsInQuickAccessToolBar, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="FrameworkElement.Height">
                        <Setter.Value>
                          <s:Double>NaN</s:Double>
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <DataTrigger Binding="{Binding Path=ControlSizeDefinition.IsLabelVisible, RelativeSource={RelativeSource Mode=Self}}" Value="False">
                      <Setter Property="TextBlock.Text" TargetName="TwoLineText">
                        <Setter.Value>
                          <x:Null />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.Margin" TargetName="TwoLineText">
                        <Setter.Value>
                          <Thickness>0,0,0,0</Thickness>
                        </Setter.Value>
                      </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ControlSizeDefinition.ImageSize, RelativeSource={RelativeSource Mode=Self}}" Value="Collapsed">
                      <Setter Property="UIElement.Visibility" TargetName="PART_Image">
                        <Setter.Value>
                          <x:Static Member="Visibility.Collapsed" />
                        </Setter.Value>
                      </Setter>
                    </DataTrigger>
                    <Trigger Property="UIElement.IsMouseOver">
                      <Setter Property="Panel.Background" TargetName="OuterBorder">
                        <Setter.Value>
                          <Binding Path="MouseOverBackground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                        <Setter.Value>
                          <Binding Path="MouseOverBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="InnerBorder">
                        <Setter.Value>
                          <SolidColorBrush>#80FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsKeyboardFocused">
                      <Setter Property="Panel.Background" TargetName="OuterBorder">
                        <Setter.Value>
                          <Binding Path="FocusedBackground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                        <Setter.Value>
                          <Binding Path="FocusedBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="InnerBorder">
                        <Setter.Value>
                          <SolidColorBrush>#80FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="UIElement.Opacity" TargetName="PART_Image">
                        <Setter.Value>
                          <s:Double>0.5</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                        <Setter.Value>
                          <SolidColorBrush>#FF9E9E9E</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                        <Setter.Value>
                          <SolidColorBrush>#FF9E9E9E</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked">
                      <Setter Property="Panel.Background" TargetName="OuterBorder">
                        <Setter.Value>
                          <Binding Path="CheckedBackground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                        <Setter.Value>
                          <Binding Path="CheckedBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="InnerBorder">
                        <Setter.Value>
                          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                              <GradientStop Color="#FFE7CBAD" Offset="0" />
                              <GradientStop Color="#FFF7D7B5" Offset="0.1" />
                              <GradientStop Color="#FFFFD38C" Offset="0.36" />
                              <GradientStop Color="#FFFFC75A" Offset="0.36" />
                              <GradientStop Color="#FFFFEFA5" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="ButtonBase.IsPressed">
                      <Setter Property="Panel.Background" TargetName="OuterBorder">
                        <Setter.Value>
                          <Binding Path="PressedBackground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                        <Setter.Value>
                          <Binding Path="PressedBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="InnerBorder">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <MultiTrigger>
                      <MultiTrigger.Conditions>
                        <Condition Property="ToggleButton.IsChecked">
                          <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                          </Condition.Value>
                        </Condition>
                        <Condition Property="UIElement.IsMouseOver">
                          <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                          </Condition.Value>
                        </Condition>
                      </MultiTrigger.Conditions>
                      <Setter Property="Panel.Background" TargetName="MiddleBorder">
                        <Setter.Value>
                          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                              <GradientStop Color="#40FFFEFE" Offset="0" />
                              <GradientStop Color="#40FFFEFE" Offset="0.39" />
                              <GradientStop Color="#20FFCE68" Offset="0.39" />
                              <GradientStop Color="#20FFCE68" Offset="0.69" />
                              <GradientStop Color="#10FFFFFF" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                    </MultiTrigger>
                    <MultiTrigger>
                      <MultiTrigger.Conditions>
                        <Condition Property="ToggleButton.IsChecked">
                          <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                          </Condition.Value>
                        </Condition>
                        <Condition Property="UIElement.IsKeyboardFocused">
                          <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                          </Condition.Value>
                        </Condition>
                      </MultiTrigger.Conditions>
                      <Setter Property="Panel.Background" TargetName="MiddleBorder">
                        <Setter.Value>
                          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                              <GradientStop Color="#40FFFEFE" Offset="0" />
                              <GradientStop Color="#40FFFEFE" Offset="0.39" />
                              <GradientStop Color="#20FFCE68" Offset="0.39" />
                              <GradientStop Color="#20FFCE68" Offset="0.69" />
                              <GradientStop Color="#10FFFFFF" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                    </MultiTrigger>
                    <MultiTrigger>
                      <MultiTrigger.Conditions>
                        <Condition Property="ButtonBase.IsPressed">
                          <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                          </Condition.Value>
                        </Condition>
                        <Condition Property="UIElement.IsKeyboardFocused">
                          <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                          </Condition.Value>
                        </Condition>
                      </MultiTrigger.Conditions>
                      <Setter Property="Panel.Background" TargetName="MiddleBorder">
                        <Setter.Value>
                          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                              <GradientStop Color="#40FFFEFE" Offset="0" />
                              <GradientStop Color="#40FFFEFE" Offset="0.39" />
                              <GradientStop Color="#20FFCE68" Offset="0.39" />
                              <GradientStop Color="#20FFCE68" Offset="0.69" />
                              <GradientStop Color="#10FFFFFF" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                    </MultiTrigger>
                    <Trigger Property="RibbonControlService.IsInControlGroup">
                      <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                        <Setter.Value>
                          <Binding Path="Ribbon.BorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderThickness" TargetName="OuterBorder">
                        <Setter.Value>
                          <Thickness>0,0,1,0</Thickness>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.CornerRadius" TargetName="OuterBorder">
                        <Setter.Value>
                          <CornerRadius>0,0,0,0</CornerRadius>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.CornerRadius" TargetName="InnerBorder">
                        <Setter.Value>
                          <CornerRadius>0,0,0,0</CornerRadius>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
                      <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.MenuTextBrushKey}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.MenuTextBrushKey}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.CornerRadius" TargetName="OuterBorder">
                        <Setter.Value>
                          <CornerRadius>0,0,0,0</CornerRadius>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Panel.Background" TargetName="OuterBorder">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                    </DataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Panel.Background" TargetName="OuterBorder">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="InnerBorder">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Panel.Background" TargetName="MiddleBorder">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True" />
                        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.ControlLightBrushKey}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True" />
                        <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True" />
                        <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}, FallbackValue=false}" Value="True" />
                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="False" />
                        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Panel.Background" TargetName="OuterBorder">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Panel.Background" TargetName="OuterBorder">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.ControlLightBrushKey}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="InnerBorder">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsKeyboardFocused, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Panel.Background" TargetName="OuterBorder">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.ControlLightBrushKey}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="InnerBorder">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                        <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsKeyboardFocused, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                        <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Panel.Background" TargetName="OuterBorder">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.ControlDarkBrushKey}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Panel.Background" TargetName="MiddleBorder">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsInControlGroup, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.ControlLightLightBrushKey}" />
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                        <Setter.Value>
                          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Setter Property="RibbonControlService.QuickAccessToolBarControlSizeDefinition">
              <Setter.Value>
                <RibbonControlSizeDefinition ImageSize="Small" IsLabelVisible="False" />
              </Setter.Value>
            </Setter>
          </Style>
        </RibbonToggleButton.Style>
      </RibbonToggleButton>
      <Path Data="M0,0L2,2 0,4 M4,0L6,2 4,4" Stretch="Fill" Fill="{TemplateBinding TextElement.Foreground}" Stroke="{TemplateBinding TextElement.Foreground}" Width="7" Height="5" Margin="1,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False" />
      <Popup IsOpen="False" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" AllowsTransparency="True" Name="PART_OverflowPopup" Focusable="False">
        <mwt:SystemDropShadowChrome Color="#00FFFFFF" Name="Shdw" FocusVisualStyle="{x:Null}" Focusable="True" RenderOptions.ClearTypeHint="Enabled">
          <Border BorderThickness="1,1,1,1" Padding="2,2,2,2" CornerRadius="2,2,2,2" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="PopupBorder">
            <DockPanel>
              <swcrp:RibbonQuickAccessToolBarOverflowPanel Name="PART_OverflowPanel" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" />
              <ContentPresenter Name="OverflowCustomizeMenuHost" DockPanel.Dock="Right" />
            </DockPanel>
          </Border>
        </mwt:SystemDropShadowChrome>
      </Popup>
    </Grid>
  </Grid>
  <ControlTemplate.Triggers>
    <DataTrigger Binding="{Binding Path=ShowQuickAccessToolBarOnTop, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Ribbon, AncestorLevel=1}}" Value="false">
      <Setter Property="FrameworkElement.Margin" TargetName="PART_MainPanel">
        <Setter.Value>
          <Thickness>2,0,2,0</Thickness>
        </Setter.Value>
      </Setter>
    </DataTrigger>
    <Trigger Property="RibbonQuickAccessToolBar.HasOverflowItems">
      <Setter Property="UIElement.Visibility" TargetName="OverflowButtonHost">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
      <Setter Property="ContentControl.Content" TargetName="MainCustomizeMenuHost">
        <Setter.Value>
          <x:Null />
        </Setter.Value>
      </Setter>
      <Setter Property="ContentControl.Content" TargetName="OverflowCustomizeMenuHost">
        <Setter.Value>
          <Binding Path="CustomizeMenuButton" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="Popup.IsOpen" SourceName="PART_OverflowPopup">
      <Setter Property="Popup.PopupAnimation" TargetName="PART_OverflowPopup">
        <Setter.Value>
          <x:Static Member="PopupAnimation.None" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
      <Setter Property="Popup.PopupAnimation" TargetName="PART_OverflowPopup">
        <Setter.Value>
          <x:Static Member="PopupAnimation.None" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="PopupBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.ControlDarkBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="PopupBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.CornerRadius" TargetName="PopupBorder">
        <Setter.Value>
          <CornerRadius>0,0,0,0</CornerRadius>
        </Setter.Value>
      </Setter>
      <Setter Property="mwt:SystemDropShadowChrome.CornerRadius" TargetName="Shdw">
        <Setter.Value>
          <CornerRadius>0,0,0,0</CornerRadius>
        </Setter.Value>
      </Setter>
    </DataTrigger>
    <Trigger Property="Popup.HasDropShadow" SourceName="PART_OverflowPopup">
      <Setter Property="FrameworkElement.Margin" TargetName="Shdw">
        <Setter.Value>
          <Thickness>0,0,5,5</Thickness>
        </Setter.Value>
      </Setter>
      <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="Shdw">
        <Setter.Value>
          <Color>#71000000</Color>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>