<ControlTemplate TargetType="RibbonTab" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Grid Name="MainGrid" ClipToBounds="True">
    <Grid.Visibility>
      <TemplateBinding Property="Selector.IsSelected">
        <TemplateBindingExtension.Converter>
          <BooleanToVisibilityConverter />
        </TemplateBindingExtension.Converter>
      </TemplateBinding>
    </Grid.Visibility>
    <Line X1="0" Y1="0" X2="0" Y2="0" Stroke="{x:Null}" StrokeThickness="2" Name="OuterLeftLine" />
    <Line X1="0" Y1="0" X2="0" Y2="0" Stroke="{x:Null}" StrokeThickness="2" Name="OuterRightLine" />
    <ScrollViewer Name="ScrollViewer">
      <ScrollViewer.Style>
        <Style TargetType="ScrollViewer">
          <Style.Resources>
            <ResourceDictionary />
          </Style.Resources>
          <Setter Property="UIElement.Focusable">
            <Setter.Value>
              <s:Boolean>False</s:Boolean>
            </Setter.Value>
          </Setter>
          <Setter Property="ScrollViewer.VerticalScrollBarVisibility">
            <Setter.Value>
              <x:Static Member="ScrollBarVisibility.Disabled" />
            </Setter.Value>
          </Setter>
          <Setter Property="ScrollViewer.HorizontalScrollBarVisibility">
            <Setter.Value>
              <x:Static Member="ScrollBarVisibility.Auto" />
            </Setter.Value>
          </Setter>
          <Setter Property="ScrollViewer.CanContentScroll">
            <Setter.Value>
              <s:Boolean>True</s:Boolean>
            </Setter.Value>
          </Setter>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="ScrollViewer">
                <Grid Background="{TemplateBinding Panel.Background}" Name="Grid">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <ScrollContentPresenter CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Name="PART_ScrollContentPresenter" Margin="{TemplateBinding Control.Padding}" Grid.ColumnSpan="3" />
                  <RepeatButton Command="ScrollBar.LineLeftCommand" CommandTarget="{x:Null}" HorizontalContentAlignment="Left" Visibility="Visible" Focusable="False" Grid.Column="0">
                    <RepeatButton.Style>
                      <Style TargetType="RepeatButton">
                        <Style.Resources>
                          <ResourceDictionary />
                        </Style.Resources>
                        <Setter Property="FrameworkElement.OverridesDefaultStyle">
                          <Setter.Value>
                            <s:Boolean>True</s:Boolean>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="UIElement.Focusable">
                          <Setter.Value>
                            <s:Boolean>False</s:Boolean>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="FrameworkElement.Width">
                          <Setter.Value>
                            <s:Double>14</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Panel.Background">
                          <Setter.Value>
                            <Binding Path="(RibbonControlService.Ribbon).Background" RelativeSource="{RelativeSource Mode=Self}" />
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Border.BorderBrush">
                          <Setter.Value>
                            <Binding Path="(RibbonControlService.Ribbon).BorderBrush" RelativeSource="{RelativeSource Mode=Self}" />
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Control.Template">
                          <Setter.Value>
                            <ControlTemplate TargetType="RepeatButton">
                              <Border BorderThickness="1,1,1,1" CornerRadius="3,0,0,3" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="OuterBorder">
                                <Border CornerRadius="3,0,0,3" Background="#80FFFFFF" Name="InnerBorder">
                                  <Path Data="M4,0L0,3.5 4,7" Fill="#FF808080" Name="GlyphPath" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                              </Border>
                              <ControlTemplate.Triggers>
                                <Trigger Property="Control.HorizontalContentAlignment">
                                  <Setter Property="Path.Data" TargetName="GlyphPath">
                                    <Setter.Value>
                                      <StreamGeometry>M0,0L4,3.5 0,7</StreamGeometry>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Border.CornerRadius" TargetName="OuterBorder">
                                    <Setter.Value>
                                      <CornerRadius>0,3,3,0</CornerRadius>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Border.CornerRadius" TargetName="InnerBorder">
                                    <Setter.Value>
                                      <CornerRadius>0,3,3,0</CornerRadius>
                                    </Setter.Value>
                                  </Setter>
                                  <Trigger.Value>
                                    <x:Static Member="HorizontalAlignment.Right" />
                                  </Trigger.Value>
                                </Trigger>
                                <MultiDataTrigger>
                                  <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                  </MultiDataTrigger.Conditions>
                                  <Setter Property="Panel.Background" TargetName="InnerBorder">
                                    <Setter.Value>
                                      <Binding Path="(RibbonControlService.Ribbon).MouseOverBackground" RelativeSource="{RelativeSource Mode=Self}" />
                                    </Setter.Value>
                                  </Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                  <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                  </MultiDataTrigger.Conditions>
                                  <Setter Property="Panel.Background" TargetName="InnerBorder">
                                    <Setter.Value>
                                      <Binding Path="(RibbonControlService.Ribbon).PressedBackground" RelativeSource="{RelativeSource Mode=Self}" />
                                    </Setter.Value>
                                  </Setter>
                                </MultiDataTrigger>
                                <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
                                  <Setter Property="Border.CornerRadius" TargetName="OuterBorder">
                                    <Setter.Value>
                                      <CornerRadius>0,0,0,0</CornerRadius>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                                    <Setter.Value>
                                      <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Panel.Background" TargetName="OuterBorder">
                                    <Setter.Value>
                                      <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Border.CornerRadius" TargetName="InnerBorder">
                                    <Setter.Value>
                                      <CornerRadius>0,0,0,0</CornerRadius>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Panel.Background" TargetName="InnerBorder">
                                    <Setter.Value>
                                      <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Shape.Fill" TargetName="GlyphPath">
                                    <Setter.Value>
                                      <DynamicResource ResourceKey="{x:Static SystemColors.ControlDarkDarkBrushKey}" />
                                    </Setter.Value>
                                  </Setter>
                                </DataTrigger>
                                <MultiDataTrigger>
                                  <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                  </MultiDataTrigger.Conditions>
                                  <Setter Property="Panel.Background" TargetName="InnerBorder">
                                    <Setter.Value>
                                      <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                                    </Setter.Value>
                                  </Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                  <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                  </MultiDataTrigger.Conditions>
                                  <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                                    <Setter.Value>
                                      <DynamicResource ResourceKey="{x:Static SystemColors.ControlDarkBrushKey}" />
                                    </Setter.Value>
                                  </Setter>
                                </MultiDataTrigger>
                              </ControlTemplate.Triggers>
                            </ControlTemplate>
                          </Setter.Value>
                        </Setter>
                      </Style>
                    </RepeatButton.Style>
                  </RepeatButton>
                  <RepeatButton Command="ScrollBar.LineRightCommand" CommandTarget="{x:Null}" HorizontalContentAlignment="Right" Visibility="Visible" Focusable="False" Grid.Column="2">
                    <RepeatButton.Style>
                      <Style TargetType="RepeatButton">
                        <Style.Resources>
                          <ResourceDictionary />
                        </Style.Resources>
                        <Setter Property="FrameworkElement.OverridesDefaultStyle">
                          <Setter.Value>
                            <s:Boolean>True</s:Boolean>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="UIElement.Focusable">
                          <Setter.Value>
                            <s:Boolean>False</s:Boolean>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="FrameworkElement.Width">
                          <Setter.Value>
                            <s:Double>14</s:Double>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Panel.Background">
                          <Setter.Value>
                            <Binding Path="(RibbonControlService.Ribbon).Background" RelativeSource="{RelativeSource Mode=Self}" />
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Border.BorderBrush">
                          <Setter.Value>
                            <Binding Path="(RibbonControlService.Ribbon).BorderBrush" RelativeSource="{RelativeSource Mode=Self}" />
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Control.Template">
                          <Setter.Value>
                            <ControlTemplate TargetType="RepeatButton">
                              <Border BorderThickness="1,1,1,1" CornerRadius="3,0,0,3" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="OuterBorder">
                                <Border CornerRadius="3,0,0,3" Background="#80FFFFFF" Name="InnerBorder">
                                  <Path Data="M4,0L0,3.5 4,7" Fill="#FF808080" Name="GlyphPath" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                              </Border>
                              <ControlTemplate.Triggers>
                                <Trigger Property="Control.HorizontalContentAlignment">
                                  <Setter Property="Path.Data" TargetName="GlyphPath">
                                    <Setter.Value>
                                      <StreamGeometry>M0,0L4,3.5 0,7</StreamGeometry>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Border.CornerRadius" TargetName="OuterBorder">
                                    <Setter.Value>
                                      <CornerRadius>0,3,3,0</CornerRadius>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Border.CornerRadius" TargetName="InnerBorder">
                                    <Setter.Value>
                                      <CornerRadius>0,3,3,0</CornerRadius>
                                    </Setter.Value>
                                  </Setter>
                                  <Trigger.Value>
                                    <x:Static Member="HorizontalAlignment.Right" />
                                  </Trigger.Value>
                                </Trigger>
                                <MultiDataTrigger>
                                  <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                  </MultiDataTrigger.Conditions>
                                  <Setter Property="Panel.Background" TargetName="InnerBorder">
                                    <Setter.Value>
                                      <Binding Path="(RibbonControlService.Ribbon).MouseOverBackground" RelativeSource="{RelativeSource Mode=Self}" />
                                    </Setter.Value>
                                  </Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                  <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
                                    <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                  </MultiDataTrigger.Conditions>
                                  <Setter Property="Panel.Background" TargetName="InnerBorder">
                                    <Setter.Value>
                                      <Binding Path="(RibbonControlService.Ribbon).PressedBackground" RelativeSource="{RelativeSource Mode=Self}" />
                                    </Setter.Value>
                                  </Setter>
                                </MultiDataTrigger>
                                <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
                                  <Setter Property="Border.CornerRadius" TargetName="OuterBorder">
                                    <Setter.Value>
                                      <CornerRadius>0,0,0,0</CornerRadius>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                                    <Setter.Value>
                                      <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Panel.Background" TargetName="OuterBorder">
                                    <Setter.Value>
                                      <DynamicResource ResourceKey="{x:Static SystemColors.ControlBrushKey}" />
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Border.CornerRadius" TargetName="InnerBorder">
                                    <Setter.Value>
                                      <CornerRadius>0,0,0,0</CornerRadius>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Panel.Background" TargetName="InnerBorder">
                                    <Setter.Value>
                                      <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Shape.Fill" TargetName="GlyphPath">
                                    <Setter.Value>
                                      <DynamicResource ResourceKey="{x:Static SystemColors.ControlDarkDarkBrushKey}" />
                                    </Setter.Value>
                                  </Setter>
                                </DataTrigger>
                                <MultiDataTrigger>
                                  <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                  </MultiDataTrigger.Conditions>
                                  <Setter Property="Panel.Background" TargetName="InnerBorder">
                                    <Setter.Value>
                                      <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                                    </Setter.Value>
                                  </Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                  <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                    <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                  </MultiDataTrigger.Conditions>
                                  <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                                    <Setter.Value>
                                      <DynamicResource ResourceKey="{x:Static SystemColors.ControlDarkBrushKey}" />
                                    </Setter.Value>
                                  </Setter>
                                </MultiDataTrigger>
                              </ControlTemplate.Triggers>
                            </ControlTemplate>
                          </Setter.Value>
                        </Setter>
                      </Style>
                    </RepeatButton.Style>
                  </RepeatButton>
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </ScrollViewer.Style>
      <Grid RenderOptions.ClearTypeHint="Enabled">
        <Canvas Name="BackgroundCanvas" Width="0" Height="0" Margin="0,1,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
          <Rectangle Fill="{x:Null}" Name="OpaqueRect" Width="Auto" Height="Auto" />
          <Rectangle Name="OverlayRect" Width="Auto" Height="Auto">
            <Rectangle.Fill>
              <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                <LinearGradientBrush.GradientStops>
                  <GradientStop Color="#EEFFFFFF" Offset="0" />
                  <GradientStop Color="#BBFFFFFF" Offset="0.1" />
                  <GradientStop Color="#05FFFFFF" Offset="0.5" />
                  <GradientStop Color="#20FFFFFF" Offset="1" />
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Rectangle.Fill>
          </Rectangle>
          <Rectangle Fill="#60FFFFFF" Name="InnerOverlayRect" Width="Auto" Height="Auto" />
        </Canvas>
        <ItemsPresenter Name="ItemsPresenter" />
      </Grid>
    </ScrollViewer>
  </Grid>
  <ControlTemplate.Triggers>
    <Trigger Property="ScrollViewer.CanContentScroll" SourceName="ScrollViewer">
      <Setter Property="Canvas.Top" TargetName="OpaqueRect">
        <Setter.Value>
          <Binding Path="VerticalOffset" ElementName="ScrollViewer" />
        </Setter.Value>
      </Setter>
      <Setter Property="Canvas.Left" TargetName="OpaqueRect">
        <Setter.Value>
          <Binding Path="HorizontalOffset" ElementName="ScrollViewer" />
        </Setter.Value>
      </Setter>
      <Setter Property="Canvas.Top" TargetName="OverlayRect">
        <Setter.Value>
          <Binding Path="VerticalOffset" ElementName="ScrollViewer" />
        </Setter.Value>
      </Setter>
      <Setter Property="Canvas.Left" TargetName="OverlayRect">
        <Setter.Value>
          <Binding Path="HorizontalOffset" ElementName="ScrollViewer" />
        </Setter.Value>
      </Setter>
      <Setter Property="Canvas.Top" TargetName="InnerOverlayRect">
        <Setter.Value>
          <Binding Path="VerticalOffset" ElementName="ScrollViewer" />
        </Setter.Value>
      </Setter>
      <Setter Property="Canvas.Left" TargetName="InnerOverlayRect">
        <Setter.Value>
          <Binding Path="HorizontalOffset" ElementName="ScrollViewer" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <MultiDataTrigger>
      <MultiDataTrigger.Conditions>
        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="False" />
        <Condition Binding="{Binding Path=ContextualTabGroup, RelativeSource={RelativeSource Mode=Self}}" Value="{x:Null}" />
      </MultiDataTrigger.Conditions>
      <Setter Property="Shape.Stroke" TargetName="OuterLeftLine">
        <Setter.Value>
          <Binding Path="Ribbon.BorderBrush" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=RibbonTab, AncestorLevel=1}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Shape.Stroke" TargetName="OuterRightLine">
        <Setter.Value>
          <Binding Path="Ribbon.BorderBrush" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=RibbonTab, AncestorLevel=1}" />
        </Setter.Value>
      </Setter>
    </MultiDataTrigger>
    <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
      <Setter Property="UIElement.Visibility" TargetName="BackgroundCanvas">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
      <Setter Property="Shape.Stroke" TargetName="OuterLeftLine">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.ControlDarkBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Shape.Stroke" TargetName="OuterRightLine">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.ControlDarkBrushKey}" />
        </Setter.Value>
      </Setter>
    </DataTrigger>
  </ControlTemplate.Triggers>
</ControlTemplate>