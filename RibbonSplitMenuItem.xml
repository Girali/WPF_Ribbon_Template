<ControlTemplate TargetType="RibbonSplitMenuItem" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic">
  <Grid Name="MainGrid" Margin="1,1,1,1" SnapsToDevicePixels="True">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="Auto" MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" />
      <ColumnDefinition Width="*" />
      <ColumnDefinition Width="14" />
    </Grid.ColumnDefinitions>
    <Border CornerRadius="2,0,0,2" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="HighlightLeftBorder" Grid.ColumnSpan="2" />
    <Border CornerRadius="2,0,0,2" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Name="HighlightLeftBorderOverlay" Grid.ColumnSpan="2" />
    <Border BorderThickness="0,0,1,0" BorderBrush="{x:Null}" Background="{x:Null}" Name="PART_SideBarBorder" Margin="-1,-1,0,-1">
      <Grid Name="SideBarOverlay">
        <Grid.Background>
          <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
              <GradientStop Color="#A0FFFFFF" Offset="0" />
              <GradientStop Color="#80FFFFFF" Offset="0.4" />
              <GradientStop Color="#0AFFFFFF" Offset="0.8" />
              <GradientStop Color="#08FFFFFF" Offset="1" />
            </LinearGradientBrush.GradientStops>
          </LinearGradientBrush>
        </Grid.Background>
        <Image Source="{TemplateBinding RibbonMenuItem.ImageSource}" Name="Image" Width="16" Height="16" Margin="4,3,6,1" HorizontalAlignment="Center" VerticalAlignment="Center" />
        <Border BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" BorderBrush="{TemplateBinding RibbonControlService.CheckedBorderBrush}" Background="{TemplateBinding RibbonControlService.CheckedBackground}" Name="CheckMarkBorder" Width="20" Height="20" Margin="1,1,1,1" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Hidden">
          <Path Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="{TemplateBinding TextElement.Foreground}" Name="CheckMark" FlowDirection="LeftToRight" Margin="4,0,6,0" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Hidden" />
        </Border>
      </Grid>
    </Border>
    <RibbonButton SmallImageSource="{TemplateBinding RibbonMenuItem.ImageSource}" ToolTipTitle="{TemplateBinding RibbonControlService.ToolTipTitle}" ToolTipDescription="{TemplateBinding RibbonControlService.ToolTipDescription}" ToolTipImageSource="{TemplateBinding RibbonControlService.ToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding RibbonControlService.ToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding RibbonControlService.ToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding RibbonControlService.ToolTipFooterImageSource}" QuickAccessToolBarId="{TemplateBinding RibbonSplitButton.HeaderQuickAccessToolBarId}" CanAddToQuickAccessToolBarDirectly="True" KeyTip="{TemplateBinding RibbonSplitButton.HeaderKeyTip}" Command="{TemplateBinding ButtonBase.Command}" CommandParameter="{TemplateBinding ButtonBase.CommandParameter}" CommandTarget="{TemplateBinding ButtonBase.CommandTarget}" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" Background="#00FFFFFF" Padding="{TemplateBinding Control.Padding}" Name="PART_HeaderButton" Focusable="False" Grid.ColumnSpan="2">
      <RibbonButton.Style>
        <Style TargetType="RibbonButton">
          <Style.Resources>
            <ResourceDictionary />
          </Style.Resources>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="RibbonButton">
                <Grid Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" ContentSource="Content" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" />
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </RibbonButton.Style>
    </RibbonButton>
    <Border CornerRadius="0,2,2,0" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="HighlightRightBorder" Grid.Column="2">
      <RibbonToggleButton ToolTipTitle="{TemplateBinding RibbonSplitButton.DropDownToolTipTitle}" ToolTipDescription="{TemplateBinding RibbonSplitButton.DropDownToolTipDescription}" ToolTipImageSource="{TemplateBinding RibbonSplitButton.DropDownToolTipImageSource}" ToolTipFooterTitle="{TemplateBinding RibbonSplitButton.DropDownToolTipFooterTitle}" ToolTipFooterDescription="{TemplateBinding RibbonSplitButton.DropDownToolTipFooterDescription}" ToolTipFooterImageSource="{TemplateBinding RibbonSplitButton.DropDownToolTipFooterImageSource}" IsChecked="False" BorderThickness="1,0,0,0" Background="#00FFFFFF" Name="PART_ArrowToggleButton" Visibility="Collapsed" Focusable="False">
        <RibbonToggleButton.Style>
          <Style TargetType="RibbonToggleButton">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="ToolTipService.InitialShowDelay">
              <Setter.Value>
                <s:Int32>900</s:Int32>
              </Setter.Value>
            </Setter>
            <Setter Property="ToolTipService.ShowDuration">
              <Setter.Value>
                <s:Int32>20000</s:Int32>
              </Setter.Value>
            </Setter>
            <Setter Property="ToolTipService.BetweenShowDelay">
              <Setter.Value>
                <s:Int32>0</s:Int32>
              </Setter.Value>
            </Setter>
            <Setter Property="ButtonBase.ClickMode">
              <Setter.Value>
                <x:Static Member="ClickMode.Press" />
              </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="RibbonToggleButton">
                  <Grid SnapsToDevicePixels="True">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="OuterBorder" />
                    <Path Data="M0,0L4,3.5 0,7z" Fill="{TemplateBinding TextElement.Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                  </Grid>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </RibbonToggleButton.Style>
      </RibbonToggleButton>
    </Border>
    <Border CornerRadius="0,2,2,0" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Name="HighlightRightBorderOverlay" Grid.Column="2" />
    <Popup IsOpen="False" Placement="Custom" VerticalOffset="-1" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" AllowsTransparency="True" Name="PART_Popup" Focusable="False">
      <mwt:SystemDropShadowChrome Color="#00FFFFFF" Name="Shadow" RenderOptions.ClearTypeHint="Enabled" KeyTipService.IsKeyTipScope="True">
        <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="2,2,2,2" BorderBrush="{x:Null}" Background="{x:Null}" Name="MenuBorder">
          <Border CornerRadius="2,2,2,2" Background="#F0FFFFFF" Name="SubMenuInnerBorder">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <ScrollViewer Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=FrameworkElement, ResourceId=MenuScrollViewer}}" Name="PART_SubMenuScrollViewer">
                <Grid RenderOptions.ClearTypeHint="Enabled">
                  <Canvas Name="BackgroundCanvas" Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Rectangle RadiusX="2" RadiusY="2" Fill="{x:Null}" Name="OpaqueRect" Width="Auto" Height="Auto" />
                    <Rectangle RadiusX="2" RadiusY="2" Fill="#F0FFFFFF" Name="OverlayRect" Width="Auto" Height="Auto" />
                  </Canvas>
                  <ItemsPresenter Name="ItemsPresenter" Margin="2,2,2,2" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />
                </Grid>
              </ScrollViewer>
              <Border BorderThickness="0,1,0,0" BorderBrush="{x:Null}" Background="#FFE5EFF9" Name="ResizeControl" Visibility="Collapsed" Grid.Row="1">
                <Thumb Name="PART_ResizeThumb">
                  <Thumb.Style>
                    <Style TargetType="Thumb">
                      <Style.Triggers>
                        <Trigger Property="FrameworkElement.FlowDirection">
                          <Setter Property="FrameworkElement.Cursor">
                            <Setter.Value>
                              <Cursor>SizeNESW</Cursor>
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <x:Static Member="FlowDirection.RightToLeft" />
                          </Trigger.Value>
                        </Trigger>
                      </Style.Triggers>
                      <Style.Resources>
                        <ResourceDictionary />
                      </Style.Resources>
                      <Setter Property="FrameworkElement.Width">
                        <Setter.Value>
                          <s:Double>11</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.Height">
                        <Setter.Value>
                          <s:Double>11</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.VerticalAlignment">
                        <Setter.Value>
                          <x:Static Member="VerticalAlignment.Bottom" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.HorizontalAlignment">
                        <Setter.Value>
                          <x:Static Member="HorizontalAlignment.Right" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="FrameworkElement.Cursor">
                        <Setter.Value>
                          <Cursor>SizeNWSE</Cursor>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="Thumb">
                            <Border Background="#00FFFFFF">
                              <Path Data="M9,0L11,0 11,11 0,11 0,9 3,9 3,6 6,6 6,3 9,3z" Margin="0,0,2,2">
                                <Path.Fill>
                                  <DrawingBrush ViewportUnits="Absolute" ViewboxUnits="Absolute" Viewport="0,0,3,3" Viewbox="0,0,3,3" TileMode="Tile">
                                    <DrawingBrush.Drawing>
                                      <DrawingGroup>
                                        <DrawingGroup.Children>
                                          <GeometryDrawing Brush="#FF6C747D" Geometry="M0,0L2,0 2,2 0,2z" />
                                        </DrawingGroup.Children>
                                      </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                  </DrawingBrush>
                                </Path.Fill>
                              </Path>
                            </Border>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </Thumb.Style>
                </Thumb>
              </Border>
            </Grid>
          </Border>
        </Border>
      </mwt:SystemDropShadowChrome>
    </Popup>
  </Grid>
  <ControlTemplate.Triggers>
    <Trigger Property="ScrollViewer.CanContentScroll" SourceName="PART_SubMenuScrollViewer">
      <Setter Property="Canvas.Top" TargetName="OpaqueRect">
        <Setter.Value>
          <Binding Path="VerticalOffset" ElementName="PART_SubMenuScrollViewer" />
        </Setter.Value>
      </Setter>
      <Setter Property="Canvas.Left" TargetName="OpaqueRect">
        <Setter.Value>
          <Binding Path="HorizontalOffset" ElementName="PART_SubMenuScrollViewer" />
        </Setter.Value>
      </Setter>
      <Setter Property="Canvas.Top" TargetName="OverlayRect">
        <Setter.Value>
          <Binding Path="VerticalOffset" ElementName="PART_SubMenuScrollViewer" />
        </Setter.Value>
      </Setter>
      <Setter Property="Canvas.Left" TargetName="OverlayRect">
        <Setter.Value>
          <Binding Path="HorizontalOffset" ElementName="PART_SubMenuScrollViewer" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="RibbonMenuButton.HasGallery">
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" TargetName="PART_SubMenuScrollViewer">
        <Setter.Value>
          <x:Static Member="ScrollBarVisibility.Disabled" />
        </Setter.Value>
      </Setter>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" TargetName="PART_SubMenuScrollViewer">
        <Setter.Value>
          <x:Static Member="ScrollBarVisibility.Disabled" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <MultiTrigger>
      <MultiTrigger.Conditions>
        <Condition Property="RibbonMenuButton.CanUserResizeHorizontally">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="RibbonMenuButton.CanUserResizeVertically">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
      </MultiTrigger.Conditions>
      <Setter Property="UIElement.Visibility" TargetName="ResizeControl">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
    </MultiTrigger>
    <MultiTrigger>
      <MultiTrigger.Conditions>
        <Condition Property="RibbonMenuButton.CanUserResizeHorizontally">
          <Condition.Value>
            <s:Boolean>False</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="RibbonMenuButton.CanUserResizeVertically">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
      </MultiTrigger.Conditions>
      <Setter Property="UIElement.Visibility" TargetName="ResizeControl">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
      <Setter Property="FrameworkElement.Style" TargetName="PART_ResizeThumb">
        <Setter.Value>
          <Style TargetType="Thumb">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="FrameworkElement.Height">
              <Setter.Value>
                <s:Double>11</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.Cursor">
              <Setter.Value>
                <Cursor>SizeNS</Cursor>
              </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                  <Border Background="#00FFFFFF">
                    <Path Margin="0,0,2,2" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                      <Path.Data>
                        <RectangleGeometry Rect="0,0,11,3" />
                      </Path.Data>
                      <Path.Fill>
                        <DrawingBrush ViewportUnits="Absolute" ViewboxUnits="Absolute" Viewport="0,0,3,3" Viewbox="0,0,3,3" TileMode="Tile">
                          <DrawingBrush.Drawing>
                            <DrawingGroup>
                              <DrawingGroup.Children>
                                <GeometryDrawing Brush="#FF6C747D" Geometry="M0,0L2,0 2,2 0,2z" />
                              </DrawingGroup.Children>
                            </DrawingGroup>
                          </DrawingBrush.Drawing>
                        </DrawingBrush>
                      </Path.Fill>
                    </Path>
                  </Border>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Setter.Value>
      </Setter>
    </MultiTrigger>
    <MultiTrigger>
      <MultiTrigger.Conditions>
        <Condition Property="RibbonMenuItem.IsDropDownPositionedLeft">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="RibbonMenuButton.CanUserResizeHorizontally">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="RibbonMenuButton.CanUserResizeVertically">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
      </MultiTrigger.Conditions>
      <Setter Property="FrameworkElement.Style" TargetName="PART_ResizeThumb">
        <Setter.Value>
          <Style TargetType="Thumb">
            <Style.Triggers>
              <Trigger Property="FrameworkElement.FlowDirection">
                <Setter Property="FrameworkElement.Cursor">
                  <Setter.Value>
                    <Cursor>SizeNWSE</Cursor>
                  </Setter.Value>
                </Setter>
                <Trigger.Value>
                  <x:Static Member="FlowDirection.RightToLeft" />
                </Trigger.Value>
              </Trigger>
            </Style.Triggers>
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="FrameworkElement.Width">
              <Setter.Value>
                <s:Double>11</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.Height">
              <Setter.Value>
                <s:Double>11</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.VerticalAlignment">
              <Setter.Value>
                <x:Static Member="VerticalAlignment.Bottom" />
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.HorizontalAlignment">
              <Setter.Value>
                <x:Static Member="HorizontalAlignment.Left" />
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.Cursor">
              <Setter.Value>
                <Cursor>SizeNESW</Cursor>
              </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                  <Border Background="#00FFFFFF">
                    <Path Data="M0,0L2,0 2,3 5,3 5,6 8,6 8,9 11,9 11,11 0,11z" Margin="2,0,0,2">
                      <Path.Fill>
                        <DrawingBrush ViewportUnits="Absolute" ViewboxUnits="Absolute" Viewport="0,0,3,3" Viewbox="0,0,3,3" TileMode="Tile">
                          <DrawingBrush.Drawing>
                            <DrawingGroup>
                              <DrawingGroup.Children>
                                <GeometryDrawing Brush="#FF6C747D" Geometry="M0,0L2,0 2,2 0,2z" />
                              </DrawingGroup.Children>
                            </DrawingGroup>
                          </DrawingBrush.Drawing>
                        </DrawingBrush>
                      </Path.Fill>
                    </Path>
                  </Border>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Setter.Value>
      </Setter>
    </MultiTrigger>
    <Trigger Property="MenuItem.IsChecked">
      <Setter Property="UIElement.Visibility" TargetName="CheckMark">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Visibility" TargetName="CheckMarkBorder">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Visibility" TargetName="Image">
        <Setter.Value>
          <x:Static Member="Visibility.Hidden" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="ItemsControl.HasItems">
      <Setter Property="UIElement.Visibility" TargetName="PART_ArrowToggleButton">
        <Setter.Value>
          <x:Static Member="Visibility.Visible" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="RibbonMenuItem.ImageSource">
      <Setter Property="UIElement.Visibility" TargetName="Image">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Null />
      </Trigger.Value>
    </Trigger>
    <Trigger Property="RibbonSplitButton.HeaderQuickAccessToolBarId">
      <Setter Property="RibbonControlService.CanAddToQuickAccessToolBarDirectly" TargetName="PART_HeaderButton">
        <Setter.Value>
          <s:Boolean>False</s:Boolean>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <x:Null />
      </Trigger.Value>
    </Trigger>
    <Trigger Property="Popup.HasDropShadow" SourceName="PART_Popup">
      <Setter Property="FrameworkElement.Margin" TargetName="Shadow">
        <Setter.Value>
          <Thickness>0,0,5,5</Thickness>
        </Setter.Value>
      </Setter>
      <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="Shadow">
        <Setter.Value>
          <Color>#71000000</Color>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="Popup.IsOpen" SourceName="PART_Popup">
      <Setter Property="Popup.PopupAnimation" TargetName="PART_Popup">
        <Setter.Value>
          <x:Static Member="PopupAnimation.None" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="MenuItem.IsHighlighted">
      <Setter Property="Panel.Background" TargetName="HighlightRightBorder">
        <Setter.Value>
          <Binding Path="MouseOverBackground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="HighlightRightBorder">
        <Setter.Value>
          <Binding Path="MouseOverBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="PART_ArrowToggleButton">
        <Setter.Value>
          <Binding Path="MouseOverBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="PART_SideBarBorder">
        <Setter.Value>
          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="PART_SideBarBorder">
        <Setter.Value>
          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="SideBarOverlay">
        <Setter.Value>
          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <MultiTrigger>
      <MultiTrigger.Conditions>
        <Condition Property="MenuItem.IsHighlighted">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="UIElement.IsEnabled" SourceName="PART_HeaderButton">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
      </MultiTrigger.Conditions>
      <Setter Property="Panel.Background" TargetName="HighlightLeftBorder">
        <Setter.Value>
          <Binding Path="MouseOverBackground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="HighlightLeftBorder">
        <Setter.Value>
          <Binding Path="MouseOverBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
    </MultiTrigger>
    <MultiTrigger>
      <MultiTrigger.Conditions>
        <Condition Property="MenuItem.IsHighlighted">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="UIElement.Visibility" Value="{x:Static Visibility.Visible}" SourceName="PART_ArrowToggleButton" />
      </MultiTrigger.Conditions>
      <Setter Property="Panel.Background" TargetName="HighlightRightBorderOverlay">
        <Setter.Value>
          <SolidColorBrush>#80FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
    </MultiTrigger>
    <Trigger Property="MenuItem.IsSubmenuOpen">
      <Setter Property="Panel.Background" TargetName="HighlightRightBorderOverlay">
        <Setter.Value>
          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <MultiTrigger>
      <MultiTrigger.Conditions>
        <Condition Property="MenuItem.IsHighlighted">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="UIElement.IsMouseOver">
          <Condition.Value>
            <s:Boolean>True</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="UIElement.IsMouseOver" SourceName="PART_HeaderButton">
          <Condition.Value>
            <s:Boolean>False</s:Boolean>
          </Condition.Value>
        </Condition>
        <Condition Property="UIElement.Visibility" Value="{x:Static Visibility.Visible}" SourceName="PART_ArrowToggleButton" />
      </MultiTrigger.Conditions>
      <Setter Property="Panel.Background" TargetName="HighlightLeftBorderOverlay">
        <Setter.Value>
          <SolidColorBrush>#80FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
    </MultiTrigger>
    <Trigger Property="MenuItem.IsChecked">
      <Setter Property="Border.BorderBrush" TargetName="PART_ArrowToggleButton">
        <Setter.Value>
          <Binding Path="CheckedBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="MenuItem.IsPressed">
      <Setter Property="Panel.Background" TargetName="HighlightLeftBorder">
        <Setter.Value>
          <Binding Path="PressedBackground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="HighlightRightBorder">
        <Setter.Value>
          <Binding Path="PressedBackground" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="HighlightLeftBorder">
        <Setter.Value>
          <Binding Path="PressedBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="HighlightRightBorder">
        <Setter.Value>
          <Binding Path="PressedBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="PART_ArrowToggleButton">
        <Setter.Value>
          <Binding Path="PressedBorderBrush" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="PART_SideBarBorder">
        <Setter.Value>
          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="PART_SideBarBorder">
        <Setter.Value>
          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="SideBarOverlay">
        <Setter.Value>
          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>True</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="UIElement.IsEnabled">
      <Setter Property="UIElement.Opacity" TargetName="PART_ArrowToggleButton">
        <Setter.Value>
          <s:Double>0.5</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="TextElement.Foreground" TargetName="PART_ArrowToggleButton">
        <Setter.Value>
          <SolidColorBrush>#FF9E9E9E</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <Trigger Property="UIElement.IsEnabled" SourceName="PART_HeaderButton">
      <Setter Property="UIElement.Opacity" TargetName="Image">
        <Setter.Value>
          <s:Double>0.5</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Opacity" TargetName="CheckMarkBorder">
        <Setter.Value>
          <s:Double>0.5</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="TextElement.Foreground" TargetName="PART_HeaderButton">
        <Setter.Value>
          <SolidColorBrush>#FF9E9E9E</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Trigger.Value>
        <s:Boolean>False</s:Boolean>
      </Trigger.Value>
    </Trigger>
    <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
      <Setter Property="UIElement.Visibility" TargetName="BackgroundCanvas">
        <Setter.Value>
          <x:Static Member="Visibility.Collapsed" />
        </Setter.Value>
      </Setter>
      <Setter Property="TextElement.Foreground" TargetName="MainGrid">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.MenuTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="TextElement.Foreground" TargetName="PART_ArrowToggleButton">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.MenuTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.CornerRadius" TargetName="HighlightLeftBorder">
        <Setter.Value>
          <CornerRadius>0,0,0,0</CornerRadius>
        </Setter.Value>
      </Setter>
      <Setter Property="Border.CornerRadius" TargetName="HighlightRightBorder">
        <Setter.Value>
          <CornerRadius>0,0,0,0</CornerRadius>
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="HighlightLeftBorder">
        <Setter.Value>
          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="HighlightRightBorder">
        <Setter.Value>
          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="HighlightLeftBorder">
        <Setter.Value>
          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="HighlightRightBorder">
        <Setter.Value>
          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Popup.PopupAnimation" TargetName="PART_Popup">
        <Setter.Value>
          <x:Static Member="PopupAnimation.None" />
        </Setter.Value>
      </Setter>
      <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="Shadow">
        <Setter.Value>
          <Color>#00FFFFFF</Color>
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="SideBarOverlay">
        <Setter.Value>
          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="ResizeControl">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="ResizeControl">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.MenuBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="PART_SideBarBorder">
        <Setter.Value>
          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="PART_SideBarBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="TextElement.Foreground" TargetName="PART_SubMenuScrollViewer">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="MenuBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="MenuBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.MenuBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="SubMenuInnerBorder">
        <Setter.Value>
          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Border.CornerRadius" TargetName="SubMenuInnerBorder">
        <Setter.Value>
          <CornerRadius>0,0,0,0</CornerRadius>
        </Setter.Value>
      </Setter>
      <Setter Property="Shape.Fill" TargetName="CheckMark">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.MenuTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Path.Data" TargetName="CheckMark">
        <Setter.Value>
          <StreamGeometry>M10,1.2L4.5,7.3 1.5,5 1.5,7.5 4.5,10 4.5,10 10,4z</StreamGeometry>
        </Setter.Value>
      </Setter>
      <Setter Property="Border.CornerRadius" TargetName="CheckMarkBorder">
        <Setter.Value>
          <CornerRadius>0,0,0,0</CornerRadius>
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="CheckMarkBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.MenuBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="CheckMarkBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.WindowFrameBrushKey}" />
        </Setter.Value>
      </Setter>
    </DataTrigger>
    <MultiDataTrigger>
      <MultiDataTrigger.Conditions>
        <Condition Binding="{Binding Path=IsHighlighted, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
      </MultiDataTrigger.Conditions>
      <Setter Property="TextElement.Foreground" TargetName="MainGrid">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="TextElement.Foreground" TargetName="PART_ArrowToggleButton">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="PART_ArrowToggleButton">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="HighlightLeftBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="HighlightRightBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="HighlightLeftBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Panel.Background" TargetName="HighlightRightBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="PART_SideBarBorder">
        <Setter.Value>
          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
        </Setter.Value>
      </Setter>
    </MultiDataTrigger>
    <MultiDataTrigger>
      <MultiDataTrigger.Conditions>
        <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
      </MultiDataTrigger.Conditions>
      <Setter Property="Border.BorderBrush" TargetName="PART_ArrowToggleButton">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
        </Setter.Value>
      </Setter>
    </MultiDataTrigger>
    <MultiDataTrigger>
      <MultiDataTrigger.Conditions>
        <Condition Binding="{Binding Path=IsChecked, ElementName=PART_ArrowToggleButton}" Value="True" />
        <Condition Binding="{Binding Path=IsHighlighted, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
      </MultiDataTrigger.Conditions>
      <Setter Property="Panel.Background" TargetName="PART_ArrowToggleButton">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
        </Setter.Value>
      </Setter>
    </MultiDataTrigger>
    <MultiDataTrigger>
      <MultiDataTrigger.Conditions>
        <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
      </MultiDataTrigger.Conditions>
      <Setter Property="TextElement.Foreground" TargetName="PART_ArrowToggleButton">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
    </MultiDataTrigger>
    <MultiDataTrigger>
      <MultiDataTrigger.Conditions>
        <Condition Binding="{Binding Path=IsEnabled, ElementName=PART_HeaderButton}" Value="False" />
        <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
      </MultiDataTrigger.Conditions>
      <Setter Property="TextElement.Foreground" TargetName="PART_HeaderButton">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="UIElement.Opacity" TargetName="CheckMarkBorder">
        <Setter.Value>
          <s:Double>1</s:Double>
        </Setter.Value>
      </Setter>
      <Setter Property="Border.BorderBrush" TargetName="CheckMarkBorder">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
      <Setter Property="Shape.Fill" TargetName="CheckMark">
        <Setter.Value>
          <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
        </Setter.Value>
      </Setter>
    </MultiDataTrigger>
  </ControlTemplate.Triggers>
</ControlTemplate>